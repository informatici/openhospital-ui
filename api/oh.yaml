openapi: 3.0.1
info:
  title: Open Hospital API Documentation
  description: Open Hospital API Documentation
  contact:
    name: ApiInfo.DEFAULT_CONTACT
  license:
    name: GPL-3.0 license
    url: https://github.com/informatici/openhospital-api?tab=GPL-3.0-1-ov-file#readme
  version: 0.1.0
servers:
- url: http://localhost:8080
security:
- bearerAuth: []
paths:
  /wards:
    get:
      tags:
      - Wards
      operationId: getWards
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WardDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Wards
      operationId: updateWard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WardDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WardDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Wards
      operationId: newWard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WardDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WardDTO"
      security:
      - bearerAuth: []
  /visits/{visitID}:
    put:
      tags:
      - Visit
      operationId: updateVisit
      parameters:
      - name: visitID
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisitDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitDTO"
      security:
      - bearerAuth: []
  /vaccinetypes:
    get:
      tags:
      - Vaccine Type
      operationId: getVaccineType
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VaccineTypeDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Vaccine Type
      operationId: updateVaccineType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaccineTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaccineTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Vaccine Type
      operationId: newVaccineType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaccineTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaccineTypeDTO"
      security:
      - bearerAuth: []
  /vaccines:
    get:
      tags:
      - Vaccines
      operationId: getVaccines
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VaccineDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Vaccines
      operationId: updateVaccine
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaccineDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaccineDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Vaccines
      operationId: newVaccine
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaccineDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaccineDTO"
      security:
      - bearerAuth: []
  /usersettings/{id}:
    put:
      tags:
      - User Settings
      operationId: updateUserSettings
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSettingDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - User Settings
      operationId: deleteUserSetting
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
      security:
      - bearerAuth: []
  /users/{username}:
    get:
      tags:
      - Users
      operationId: getUserByName
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Users
      operationId: updateUser
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Users
      operationId: deleteUser
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
      security:
      - bearerAuth: []
  /users/me:
    get:
      tags:
      - Users
      operationId: retrieveProfileByCurrentLoggedInUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Users
      operationId: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDTO"
      security:
      - bearerAuth: []
  /usergroups/{group_code}:
    get:
      tags:
      - User Groups
      operationId: getUserGroup
      parameters:
      - name: group_code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - User Groups
      operationId: updateUserGroup
      parameters:
      - name: group_code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserGroupDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - User Groups
      operationId: deleteGroup
      parameters:
      - name: group_code
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
      security:
      - bearerAuth: []
  /usergroups/{group_code}/permissions:
    put:
      tags:
      - User Groups
      operationId: updateGroupPermissions
      parameters:
      - name: group_code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPermissionsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PermissionDTO"
      security:
      - bearerAuth: []
    patch:
      tags:
      - User Groups
      operationId: replaceGroupPermissions
      parameters:
      - name: group_code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPermissionsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PermissionDTO"
      security:
      - bearerAuth: []
  /suppliers:
    get:
      tags:
      - Suppliers
      operationId: getSuppliers
      parameters:
      - name: exclude_deleted
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SupplierDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Suppliers
      operationId: updateSupplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupplierDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Suppliers
      operationId: saveSupplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupplierDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierDTO"
      security:
      - bearerAuth: []
  /pricesothers/{id}:
    put:
      tags:
      - Others Price
      operationId: updatePricesOthers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PricesOthersDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PricesOthersDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Others Price
      operationId: deletePricesOthers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /pricelists/{id}:
    put:
      tags:
      - Price Lists
      operationId: updatePriceLists
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PriceListDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceListDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Price Lists
      operationId: deletePriceList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /pregnanttreatmenttypes/{code}:
    put:
      tags:
      - Pregnant Treatment Types
      operationId: updatePregnantTreatmentTypes
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PregnantTreatmentTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PregnantTreatmentTypeDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Pregnant Treatment Types
      operationId: deletePregnantTreatmentType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /patientvaccines/{code}:
    put:
      tags:
      - Patient Vaccines
      operationId: updatePatientVaccinet
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientVaccineDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientVaccineDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Patient Vaccines
      operationId: deletePatientVaccine
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /patients/{code}:
    get:
      tags:
      - Patients
      operationId: getPatient
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Patients
      operationId: updatePatient
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Patients
      operationId: deletePatient
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /patientconsensus/{patientId}:
    get:
      tags:
      - Patient Consensus
      operationId: getPatientConsensus
      parameters:
      - name: patientId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientConsensusDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Patient Consensus
      operationId: updatePatientConsensus
      parameters:
      - name: patientId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientConsensusDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientConsensusDTO"
      security:
      - bearerAuth: []
  /operationtypes/{code}:
    put:
      tags:
      - Operations Types
      operationId: updateOperationTypes
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationTypeDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Operations Types
      operationId: deleteOperationType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /operations/{code}:
    get:
      tags:
      - Operations
      operationId: getOperationByCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Operations
      operationId: updateOperation
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Operations
      operationId: deleteOperation
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /operations/rows:
    put:
      tags:
      - Operations
      operationId: updateOperationRow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationRowDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
    post:
      tags:
      - Operations
      operationId: newOperationRow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationRowDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationRowDTO"
      security:
      - bearerAuth: []
  /opds/{code}:
    put:
      tags:
      - Opds
      operationId: updateOpd
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpdDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpdDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Opds
      operationId: deleteOpd
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /opds/rows/{code}:
    put:
      tags:
      - Opds
      operationId: updateOpdWithOperationRow
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpdWithOperationRowDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpdWithOperationRowDTO"
      security:
      - bearerAuth: []
  /medstockmovementtypes:
    get:
      tags:
      - Medical Stock Movement Type
      operationId: getMedicalDsrStockMovementType
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementTypeDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Medical Stock Movement Type
      operationId: updateMedicalDsrStockMovementType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MovementTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovementTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Medical Stock Movement Type
      operationId: newMedicalDsrStockMovementType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MovementTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovementTypeDTO"
      security:
      - bearerAuth: []
  /medicaltypes:
    get:
      tags:
      - Medical Types
      operationId: getMedicalTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MedicalTypeDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Medical Types
      operationId: updateMedicalType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicalTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicalTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Medical Types
      operationId: createMedicalType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicalTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicalTypeDTO"
      security:
      - bearerAuth: []
  /medicals:
    get:
      tags:
      - Medicals
      operationId: getMedicals
      parameters:
      - name: sort_by
        in: query
        required: false
        schema:
          type: string
          enum:
          - NONE
          - CODE
          - NAME
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MedicalDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Medicals
      operationId: updateMedical
      parameters:
      - name: ignore_similar
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicalDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicalDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Medicals
      operationId: newMedical
      parameters:
      - name: ignore_similar
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicalDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicalDTO"
      security:
      - bearerAuth: []
  /malnutritions:
    put:
      tags:
      - Malnutritions
      operationId: updateMalnutrition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MalnutritionDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalnutritionDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Malnutritions
      operationId: newMalnutrition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MalnutritionDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalnutritionDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Malnutritions
      operationId: deleteMalnutrition
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories/{code}:
    get:
      tags:
      - Laboratories
      operationId: getExamById
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaboratoryDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Laboratories
      operationId: updateLaboratory
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabWithRowsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
    delete:
      tags:
      - Laboratories
      operationId: deleteExam
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories/examRequest/{code}:
    put:
      tags:
      - Laboratories
      operationId: updateExamRequest
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
    delete:
      tags:
      - Laboratories
      operationId: deleteExamRequest
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /hospitals/{code}:
    put:
      tags:
      - Hospitals
      operationId: updateHospital
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HospitalDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HospitalDTO"
      security:
      - bearerAuth: []
  /examtypes/{code}:
    put:
      tags:
      - Exam Types
      operationId: updateExamType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExamTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExamTypeDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Exam Types
      operationId: deleteExamType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /exams/{code}:
    put:
      tags:
      - Exams
      operationId: updateExam
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExamWithRowsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExamDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Exams
      operationId: deleteExam_1
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /examinations/{id}:
    get:
      tags:
      - Examinations
      operationId: getByID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientExaminationDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Examinations
      operationId: updateExamination
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientExaminationDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /diseasetypes:
    get:
      tags:
      - Disease Types
      operationId: getAllDiseaseTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseTypeDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Disease Types
      operationId: updateDiseaseType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiseaseTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiseaseTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Disease Types
      operationId: newDiseaseType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiseaseTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiseaseTypeDTO"
      security:
      - bearerAuth: []
  /diseases:
    put:
      tags:
      - Diseases
      operationId: updateDisease
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiseaseDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Diseases
      operationId: newDisease
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiseaseDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /dischargetypes:
    get:
      tags:
      - DischargeType
      operationId: getDischargeTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DischargeTypeDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - DischargeType
      operationId: updateDischargeTypet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DischargeTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DischargeTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - DischargeType
      operationId: newDischargeType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DischargeTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DischargeTypeDTO"
      security:
      - bearerAuth: []
  /deliverytypes:
    get:
      tags:
      - Delivery Type
      operationId: getDeliveryTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeliveryTypeDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Delivery Type
      operationId: updateDeliveryTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Delivery Type
      operationId: newDeliveryType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryTypeDTO"
      security:
      - bearerAuth: []
  /deliveryresulttypes:
    get:
      tags:
      - Delivery Result Type
      operationId: getDeliveryResultTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeliveryResultTypeDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Delivery Result Type
      operationId: updateDeliveryResultTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryResultTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryResultTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Delivery Result Type
      operationId: newDeliveryResultType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryResultTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryResultTypeDTO"
      security:
      - bearerAuth: []
  /bills/{id}:
    get:
      tags:
      - Bills
      operationId: getBill
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Bills
      operationId: updateBill
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FullBillDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FullBillDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Bills
      operationId: deleteBill
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /agetypes:
    get:
      tags:
      - AgeTypes
      operationId: getAllAgeTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgeTypeDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - AgeTypes
      operationId: updateAgeType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgeTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgeTypeDTO"
      security:
      - bearerAuth: []
  /admissiontypes:
    get:
      tags:
      - AdmissionTypes
      operationId: getAdmissionTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdmissionTypeDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - AdmissionTypes
      operationId: updateAdmissionTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdmissionTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdmissionTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - AdmissionTypes
      operationId: newAdmissionType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdmissionTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdmissionTypeDTO"
      security:
      - bearerAuth: []
  /admissions:
    get:
      tags:
      - Admissions
      operationId: getAdmissions
      parameters:
      - name: admissionrange
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageAdmissionDTO"
      security:
      - bearerAuth: []
    put:
      tags:
      - Admissions
      operationId: updateAdmissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdmissionDTO"
        required: true
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdmissionDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Admissions
      operationId: newAdmissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdmissionDTO"
        required: true
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdmissionDTO"
      security:
      - bearerAuth: []
  /visits:
    post:
      tags:
      - Visit
      operationId: newVisit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisitDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitDTO"
      security:
      - bearerAuth: []
  /visits/insertList:
    post:
      tags:
      - Visit
      operationId: newVisits
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/VisitDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /usersettings:
    get:
      tags:
      - User Settings
      operationId: getUserSettings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserSettingDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - User Settings
      operationId: newUserSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSettingDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingDTO"
      security:
      - bearerAuth: []
  /users:
    get:
      tags:
      - Users
      operationId: getUser
      parameters:
      - name: group_id
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Users
      operationId: newUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
      security:
      - bearerAuth: []
  /usergroups:
    get:
      tags:
      - User Groups
      operationId: getUserGroups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserGroupDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - User Groups
      operationId: newUserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserGroupDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupDTO"
      security:
      - bearerAuth: []
  /usergroups/{group_code}/permissions/{id}:
    post:
      tags:
      - User Groups
      operationId: assignPermission
      parameters:
      - name: group_code
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
    delete:
      tags:
      - User Groups
      operationId: revokePermission
      parameters:
      - name: group_code
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
      security:
      - bearerAuth: []
  /therapies:
    post:
      tags:
      - Therapies
      operationId: newTherapy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TherapyRowDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TherapyRowDTO"
      security:
      - bearerAuth: []
  /therapies/replace:
    post:
      tags:
      - Therapies
      operationId: replaceTherapies
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TherapyRowDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TherapyRow"
      security:
      - bearerAuth: []
  /therapies/meds-out-of-stock:
    post:
      tags:
      - Therapies
      operationId: getMedicalsOutOfStock
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TherapyDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MedicalDTO"
      security:
      - bearerAuth: []
  /therapies/from-rows:
    post:
      tags:
      - Therapies
      operationId: getTherapies
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TherapyRowDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TherapyDTO"
      security:
      - bearerAuth: []
  /therapies/from-row:
    post:
      tags:
      - Therapies
      operationId: getTherapy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TherapyRowDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TherapyDTO"
      security:
      - bearerAuth: []
  /stockmovements/discharge:
    post:
      tags:
      - Stock Movements
      operationId: newMultipleDischargingMovements
      parameters:
      - name: ref
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MovementDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /stockmovements/charge:
    post:
      tags:
      - Stock Movements
      operationId: newMultipleChargingMovements
      parameters:
      - name: ref
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MovementDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /sms:
    get:
      tags:
      - SMS
      operationId: getAll
      parameters:
      - name: dateFrom
        in: query
        required: true
        schema:
          type: string
      - name: dateTo
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SmsDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - SMS
      operationId: saveSms
      parameters:
      - name: split
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /sms/delete:
    post:
      tags:
      - SMS
      operationId: deleteSms
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/SmsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /pricesothers:
    get:
      tags:
      - Others Price
      operationId: getPricesOthers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PricesOthersDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Others Price
      operationId: newPricesOthers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PricesOthersDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PricesOthersDTO"
      security:
      - bearerAuth: []
  /pricelists:
    get:
      tags:
      - Price Lists
      operationId: getPriceLists
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PriceListDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Price Lists
      operationId: newPriceList
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PriceListDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceListDTO"
      security:
      - bearerAuth: []
  /pregnanttreatmenttypes:
    get:
      tags:
      - Pregnant Treatment Types
      operationId: getPregnantTreatmentTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PregnantTreatmentTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Pregnant Treatment Types
      operationId: newPregnantTreatmentType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PregnantTreatmentTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PregnantTreatmentTypeDTO"
      security:
      - bearerAuth: []
  /patientvaccines:
    post:
      tags:
      - Patient Vaccines
      operationId: newPatientVaccine
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientVaccineDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientVaccineDTO"
      security:
      - bearerAuth: []
  /patients:
    get:
      tags:
      - Patients
      operationId: getPatients
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagePatientDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Patients
      operationId: newPatient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDTO"
      security:
      - bearerAuth: []
  /operationtypes:
    get:
      tags:
      - Operations Types
      operationId: getOperationTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperationTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Operations Types
      operationId: newOperationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationTypeDTO"
      security:
      - bearerAuth: []
  /operations:
    get:
      tags:
      - Operations
      operationId: getOperations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperationDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Operations
      operationId: newOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationDTO"
      security:
      - bearerAuth: []
  /operations/rows/search/opd:
    post:
      tags:
      - Operations
      operationId: getOperationRowsByOpd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpdDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperationRowDTO"
      security:
      - bearerAuth: []
  /opds:
    post:
      tags:
      - Opds
      operationId: newOpd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpdDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpdDTO"
      security:
      - bearerAuth: []
  /opds/rows:
    post:
      tags:
      - Opds
      operationId: newOpdWithOperationRow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpdWithOperationRowDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpdWithOperationRowDTO"
      security:
      - bearerAuth: []
  /medicalstockward/movements:
    post:
      tags:
      - Medical Stock Ward
      operationId: newMovementWard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MovementWardDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicalstockmovements/discharge:
    post:
      tags:
      - Stock Movements
      operationId: newMultipleDischargingMovements_1
      parameters:
      - name: ref
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MovementDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicalstockmovements/charge:
    post:
      tags:
      - Stock Movements
      operationId: newMultipleChargingMovements_1
      parameters:
      - name: ref
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MovementDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories:
    get:
      tags:
      - Laboratories
      operationId: getLaboratory
      parameters:
      - name: oneWeek
        in: query
        required: true
        schema:
          type: boolean
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageLabWithRowsDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Laboratories
      operationId: newLaboratory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabWithRowsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories/insertList:
    post:
      tags:
      - Laboratories
      operationId: newLaboratory2
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/LabWithRowsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories/examRequest:
    get:
      tags:
      - Laboratories
      operationId: getLaboratoryExamRequest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LaboratoryDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Laboratories
      operationId: newExamRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaboratoryDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /examtypes:
    get:
      tags:
      - Exam Types
      operationId: getExamTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExamTypeDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Exam Types
      operationId: newExamType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExamTypeDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExamTypeDTO"
      security:
      - bearerAuth: []
  /exams:
    get:
      tags:
      - Exams
      operationId: getExams
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExamDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Exams
      operationId: newExam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExamWithRowsDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExamDTO"
      security:
      - bearerAuth: []
  /examrows:
    get:
      tags:
      - Exam Rows
      operationId: getExamRows
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExamRowDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Exam Rows
      operationId: newExamRow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExamRowDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExamRowDTO"
      security:
      - bearerAuth: []
  /examinations:
    post:
      tags:
      - Examinations
      operationId: newPatientExamination
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientExaminationDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /bills:
    get:
      tags:
      - Bills
      operationId: searchBills_1
      parameters:
      - name: datefrom
        in: query
        required: true
        schema:
          type: string
      - name: dateto
        in: query
        required: true
        schema:
          type: string
      - name: patient_code
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillDTO"
      security:
      - bearerAuth: []
    post:
      tags:
      - Bills
      operationId: newBill
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FullBillDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FullBillDTO"
      security:
      - bearerAuth: []
  /bills/search/by/payments:
    post:
      tags:
      - Bills
      operationId: searchBillsByPayments
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/BillPaymentsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillDTO"
      security:
      - bearerAuth: []
  /bills/search/by/item:
    post:
      tags:
      - Bills
      operationId: searchBills
      parameters:
      - name: datefrom
        in: query
        required: true
        schema:
          type: string
      - name: dateto
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillItemsDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillDTO"
      security:
      - bearerAuth: []
  /auth/refresh-token:
    post:
      tags:
      - Login
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRefreshRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LoginResponse"
      security:
      - bearerAuth: []
  /auth/logout:
    post:
      tags:
      - Login
      description: Logout the current user.
      operationId: logout
      responses:
        "200":
          description: OK
  /auth/login:
    post:
      tags:
      - Login
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
      security:
      - bearerAuth: []
  /admissions/discharge:
    post:
      tags:
      - Admissions
      operationId: dischargePatient
      parameters:
      - name: patientCode
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdmissionDTO"
        required: true
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /wardsNoMaternity:
    get:
      tags:
      - Wards
      operationId: getWardsNoMaternity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WardDTO"
      security:
      - bearerAuth: []
  /wards/occupation/{code}:
    get:
      tags:
      - Wards
      operationId: getCurrentOccupation
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /wards/check/{code}:
    get:
      tags:
      - Wards
      operationId: checkWardCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /wards/check/maternity/{createIfNotExist}:
    get:
      tags:
      - Wards
      operationId: checkWardMaternityCode
      parameters:
      - name: createIfNotExist
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /visits/patient/{patID}:
    get:
      tags:
      - Visit
      operationId: getVisit
      parameters:
      - name: patID
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VisitDTO"
      security:
      - bearerAuth: []
  /vaccinetypes/check/{code}:
    get:
      tags:
      - Vaccine Type
      operationId: checkVaccineTypeCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /vaccines/type-code/{vaccineTypeCode}:
    get:
      tags:
      - Vaccines
      operationId: getVaccinesByVaccineTypeCode
      parameters:
      - name: vaccineTypeCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VaccineDTO"
      security:
      - bearerAuth: []
  /vaccines/check/{code}:
    get:
      tags:
      - Vaccines
      operationId: checkVaccineCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /usersettings/{configName}:
    get:
      tags:
      - User Settings
      operationId: getUserSettingByUser
      parameters:
      - name: configName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingDTO"
      security:
      - bearerAuth: []
  /users/{username}/permissions:
    get:
      tags:
      - Users
      operationId: retrievePermissionsByUsername
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PermissionDTO"
      security:
      - bearerAuth: []
  /therapies/{code_patient}:
    get:
      tags:
      - Therapies
      operationId: getTherapyRows
      parameters:
      - name: code_patient
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TherapyRowDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Therapies
      operationId: deleteAllTherapies
      parameters:
      - name: code_patient
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /suppliers/{id}:
    get:
      tags:
      - Suppliers
      operationId: getSuppliers_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Suppliers
      operationId: deleteSupplier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
      security:
      - bearerAuth: []
  /stockmovements:
    get:
      tags:
      - Stock Movements
      operationId: getMovements
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementDTO"
      security:
      - bearerAuth: []
  /stockmovements/{ref}:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_1
      parameters:
      - name: ref
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementDTO"
      security:
      - bearerAuth: []
  /stockmovements/lot/{med_code}:
    get:
      tags:
      - Stock Movements
      operationId: getLotByMedical
      parameters:
      - name: med_code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LotDTO"
      security:
      - bearerAuth: []
  /stockmovements/filter/v2:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_2
      parameters:
      - name: med_code
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: med_type
        in: query
        required: false
        schema:
          type: string
      - name: ward_id
        in: query
        required: false
        schema:
          type: string
      - name: mov_type
        in: query
        required: false
        schema:
          type: string
      - name: mov_from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: mov_to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_prep_from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_prep_to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_due_from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_due_to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementDTO"
      security:
      - bearerAuth: []
  /stockmovements/filter/v1:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_3
      parameters:
      - name: ward_id
        in: query
        required: true
        schema:
          type: string
      - name: from
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementDTO"
      security:
      - bearerAuth: []
  /stockmovements/critical/check:
    get:
      tags:
      - Stock Movements
      operationId: alertCriticalQuantity
      parameters:
      - name: med_code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: qty
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /reports/exams-list:
    get:
      tags:
      - Reports
      operationId: printExamsListPdf
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
      - bearerAuth: []
  /reports/diseases-list:
    get:
      tags:
      - Reports
      operationId: printDiseasesListPdf
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
      - bearerAuth: []
  /pricelists/prices:
    get:
      tags:
      - Price Lists
      operationId: getPrices
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PriceDTO"
      security:
      - bearerAuth: []
  /pricelists/duplicate/{id}:
    get:
      tags:
      - Price Lists
      operationId: copyList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /pricelists/duplicate/byfactor/{id}:
    get:
      tags:
      - Price Lists
      operationId: copyByFactorAndStep
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: factor
        in: query
        required: true
        schema:
          type: number
          format: double
      - name: step
        in: query
        required: true
        schema:
          type: number
          format: double
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /permissions:
    get:
      tags:
      - Permissions
      operationId: retrieveAllPermissions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PermissionDTO"
      security:
      - bearerAuth: []
  /permissions/{id}:
    get:
      tags:
      - Permissions
      operationId: retrievePermissionById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionDTO"
      security:
      - bearerAuth: []
  /permissions/userGroupCode/{userGroupCode}:
    get:
      tags:
      - Permissions
      operationId: retrievePermissionsByUserGroupCode
      parameters:
      - name: userGroupCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PermissionDTO"
      security:
      - bearerAuth: []
  /permissions/name/{name}:
    get:
      tags:
      - Permissions
      operationId: retrievePermissionByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionDTO"
      security:
      - bearerAuth: []
  /patientvaccines/week:
    get:
      tags:
      - Patient Vaccines
      operationId: getPatientVaccines
      parameters:
      - name: oneWeek
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PatientVaccineDTO"
      security:
      - bearerAuth: []
  /patientvaccines/progyear/{year}:
    get:
      tags:
      - Patient Vaccines
      operationId: getProgYear
      parameters:
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /patientvaccines/filter:
    get:
      tags:
      - Patient Vaccines
      operationId: getPatientVaccinesByDatesRanges
      parameters:
      - name: vaccineTypeCode
        in: query
        required: true
        schema:
          type: string
      - name: vaccineCode
        in: query
        required: true
        schema:
          type: string
      - name: dateFrom
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: dateTo
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: sex
        in: query
        required: true
        schema:
          type: string
      - name: ageFrom
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: ageTo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PatientVaccineDTO"
      security:
      - bearerAuth: []
  /patients/search:
    get:
      tags:
      - Patients
      operationId: searchPatient
      parameters:
      - name: firstName
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: secondName
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: birthDate
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: address
        in: query
        required: false
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PatientDTO"
      security:
      - bearerAuth: []
  /patients/nextcode:
    get:
      tags:
      - Patients
      operationId: getPatientNextCode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /patients/merge:
    get:
      tags:
      - Patients
      operationId: mergePatients
      parameters:
      - name: mergedcode
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: code2
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /patients/cities:
    get:
      tags:
      - Patients
      operationId: getPatientCities
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - bearerAuth: []
  /patients/all:
    get:
      tags:
      - Patients
      operationId: getPatientAll
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDTO"
      security:
      - bearerAuth: []
  /operations/search/type:
    get:
      tags:
      - Operations
      operationId: getOperationByTypeDescription
      parameters:
      - name: typeDescription
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperationDTO"
      security:
      - bearerAuth: []
  /operations/rows/search/patient:
    get:
      tags:
      - Operations
      operationId: getOperationRowsByPatient
      parameters:
      - name: patientCode
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperationRowDTO"
      security:
      - bearerAuth: []
  /operations/rows/search/admission:
    get:
      tags:
      - Operations
      operationId: getOperationRowsByAdmt
      parameters:
      - name: admissionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperationRowDTO"
      security:
      - bearerAuth: []
  /opds/weekly:
    get:
      tags:
      - Opds
      operationId: getOpdToDayOrWeek
      parameters:
      - name: oneWeek
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OpdDTO"
      security:
      - bearerAuth: []
  /opds/search:
    get:
      tags:
      - Opds
      operationId: getOpdByDates
      parameters:
      - name: dateFrom
        in: query
        required: true
        schema:
          type: string
      - name: dateTo
        in: query
        required: true
        schema:
          type: string
      - name: diseaseTypeCode
        in: query
        required: false
        schema:
          type: string
      - name: diseaseCode
        in: query
        required: false
        schema:
          type: string
      - name: ageFrom
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: ageTo
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 200
      - name: sex
        in: query
        required: false
        schema:
          type: string
          default: A
      - name: newPatient
        in: query
        required: false
        schema:
          type: string
          default: A
      - name: patientCode
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: wardCode
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageOpdDTO"
      security:
      - bearerAuth: []
  /opds/patient/{pcode}:
    get:
      tags:
      - Opds
      operationId: getOpdByPatient
      parameters:
      - name: pcode
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OpdWithOperationRowDTO"
      security:
      - bearerAuth: []
  /opds/last/{patientCode}:
    get:
      tags:
      - Opds
      operationId: getLastOpd
      parameters:
      - name: patientCode
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpdDTO"
      security:
      - bearerAuth: []
  /opds/check/progyear:
    get:
      tags:
      - Opds
      operationId: isExistOpdNum
      parameters:
      - name: opdNum
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: year
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /opds/ProgYear/{year}:
    get:
      tags:
      - Opds
      operationId: getProgYear_1
      parameters:
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /medstockmovementtypes/{code}:
    get:
      tags:
      - Medical Stock Movement Type
      operationId: getMovementType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovementTypeDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Medical Stock Movement Type
      operationId: deleteMedicalDsrStockMovementType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medstockmovementtypes/check/{code}:
    get:
      tags:
      - Medical Stock Movement Type
      operationId: isCodeUsed
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicaltypes/check/{code}:
    get:
      tags:
      - Medical Types
      operationId: isCodeUsed_1
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicalstockward/{ward_code}:
    get:
      tags:
      - Medical Stock Ward
      operationId: getMedicalsWard
      parameters:
      - name: ward_code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MedicalWardDTO"
      security:
      - bearerAuth: []
  /medicalstockward/movements/{ward_code}:
    get:
      tags:
      - Medical Stock Ward
      operationId: getMovementWard
      parameters:
      - name: ward_code
        in: path
        required: true
        schema:
          type: string
      - name: from
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementWardDTO"
      security:
      - bearerAuth: []
  /medicalstockward/movements/to/{target_ward_code}:
    get:
      tags:
      - Medical Stock Ward
      operationId: getWardMovementsToWard
      parameters:
      - name: target_ward_code
        in: path
        required: true
        schema:
          type: string
      - name: from
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementWardDTO"
      security:
      - bearerAuth: []
  /medicalstockward/current/{ward_code}:
    get:
      tags:
      - Medical Stock Ward
      operationId: getCurrentQuantityInWard
      parameters:
      - name: ward_code
        in: path
        required: true
        schema:
          type: string
      - name: med_id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /medicalstockmovements:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_4
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementDTO"
      security:
      - bearerAuth: []
  /medicalstockmovements/{ref}:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_5
      parameters:
      - name: ref
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementDTO"
      security:
      - bearerAuth: []
  /medicalstockmovements/lot/{med_code}:
    get:
      tags:
      - Stock Movements
      operationId: getLotByMedical_1
      parameters:
      - name: med_code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LotDTO"
      security:
      - bearerAuth: []
  /medicalstockmovements/filter/v2:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_6
      parameters:
      - name: med_code
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: med_type
        in: query
        required: false
        schema:
          type: string
      - name: ward_id
        in: query
        required: false
        schema:
          type: string
      - name: mov_type
        in: query
        required: false
        schema:
          type: string
      - name: mov_from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: mov_to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_prep_from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_prep_to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_due_from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_due_to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementDTO"
      security:
      - bearerAuth: []
  /medicalstockmovements/filter/v1:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_7
      parameters:
      - name: ward_id
        in: query
        required: true
        schema:
          type: string
      - name: from
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovementDTO"
      security:
      - bearerAuth: []
  /medicalstockmovements/critical/check:
    get:
      tags:
      - Stock Movements
      operationId: alertCriticalQuantity_1
      parameters:
      - name: med_code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: qty
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicals/{code}:
    get:
      tags:
      - Medicals
      operationId: getMedical
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicalDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Medicals
      operationId: deleteMedical
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicals/filter:
    get:
      tags:
      - Medicals
      operationId: filterMedicals
      parameters:
      - name: desc
        in: query
        required: false
        schema:
          type: string
      - name: type
        in: query
        required: false
        schema:
          type: string
      - name: critical
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: name_sorted
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MedicalDTO"
      security:
      - bearerAuth: []
  /malnutritions/{id_admission}:
    get:
      tags:
      - Malnutritions
      operationId: getMalnutrition
      parameters:
      - name: id_admission
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MalnutritionDTO"
      security:
      - bearerAuth: []
  /malnutritions/last/{id_patient}:
    get:
      tags:
      - Malnutritions
      operationId: getLastMalnutrition
      parameters:
      - name: id_patient
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalnutritionDTO"
      security:
      - bearerAuth: []
  /laboratories/materials:
    get:
      tags:
      - Laboratories
      operationId: getMaterials
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - bearerAuth: []
  /laboratories/exams:
    get:
      tags:
      - Laboratories
      operationId: getLaboratoryForPrint
      parameters:
      - name: examName
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: dateFrom
        in: query
        required: true
        schema:
          type: string
      - name: dateTo
        in: query
        required: true
        schema:
          type: string
      - name: patientCode
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: status
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageLabWithRowsDTO"
      security:
      - bearerAuth: []
  /laboratories/exams/{code}:
    get:
      tags:
      - Laboratories
      operationId: getExamWithRowsById
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabWithRowsDTO"
      security:
      - bearerAuth: []
  /laboratories/examRequest/patient/{patId}:
    get:
      tags:
      - Laboratories
      operationId: getLaboratoryExamRequest_1
      parameters:
      - name: patId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LaboratoryDTO"
      security:
      - bearerAuth: []
  /laboratories/byPatientId/{patId}:
    get:
      tags:
      - Laboratories
      operationId: getLaboratory_1
      parameters:
      - name: patId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LabWithRowsDTO"
      security:
      - bearerAuth: []
  /hospitals:
    get:
      tags:
      - Hospitals
      operationId: getHospital
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HospitalDTO"
      security:
      - bearerAuth: []
  /hospitals/currencyCode:
    get:
      tags:
      - Hospitals
      operationId: getHospitalCurrencyCode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
      security:
      - bearerAuth: []
  /exams/description/{description}:
    get:
      tags:
      - Exams
      operationId: getExams_1
      parameters:
      - name: description
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExamDTO"
      security:
      - bearerAuth: []
  /examrows/{code}:
    get:
      tags:
      - Exam Rows
      operationId: getExamRowsByCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExamRowDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Exam Rows
      operationId: deleteExam_2
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /examrows/search:
    get:
      tags:
      - Exam Rows
      operationId: getExamRowsByCodeAndDescription
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: description
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExamRowDTO"
      security:
      - bearerAuth: []
  /examrows/byExamCode/{examCode}:
    get:
      tags:
      - Exam Rows
      operationId: getExamRowsByExamCode
      parameters:
      - name: examCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExamRowDTO"
      security:
      - bearerAuth: []
  /examinations/lastNByPatId:
    get:
      tags:
      - Examinations
      operationId: getLastNByPatID
      parameters:
      - name: limit
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: patId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagePatientExaminationDTO"
      security:
      - bearerAuth: []
  /examinations/lastByPatientId/{patId}:
    get:
      tags:
      - Examinations
      operationId: getLastByPatientId
      parameters:
      - name: patId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientExaminationDTO"
      security:
      - bearerAuth: []
  /examinations/fromLastPatientExamination/{id}:
    get:
      tags:
      - Examinations
      operationId: getFromLastPatientExamination
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientExaminationDTO"
      security:
      - bearerAuth: []
  /examinations/defaultPatientExamination:
    get:
      tags:
      - Examinations
      operationId: getDefaultPatientExamination
      parameters:
      - name: patId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientExaminationDTO"
      security:
      - bearerAuth: []
  /examinations/byPatientId/{patId}:
    get:
      tags:
      - Examinations
      operationId: getByPatientId
      parameters:
      - name: patId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PatientExaminationDTO"
      security:
      - bearerAuth: []
  /diseases/{code}:
    get:
      tags:
      - Diseases
      operationId: getDiseaseByCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
    delete:
      tags:
      - Diseases
      operationId: deleteDisease
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
      security:
      - bearerAuth: []
  /diseases/opd:
    get:
      tags:
      - Diseases
      operationId: getDiseasesOpd
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /diseases/opd/{typecode}:
    get:
      tags:
      - Diseases
      operationId: getDiseasesOpdByCode
      parameters:
      - name: typecode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /diseases/ipd/out:
    get:
      tags:
      - Diseases
      operationId: getDiseasesIpdOut
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /diseases/ipd/out/{typecode}:
    get:
      tags:
      - Diseases
      operationId: getDiseasesIpdOutByCode
      parameters:
      - name: typecode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /diseases/ipd/in:
    get:
      tags:
      - Diseases
      operationId: getDiseasesIpdIn
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /diseases/ipd/in/{typecode}:
    get:
      tags:
      - Diseases
      operationId: getDiseasesIpdInByCode
      parameters:
      - name: typecode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /diseases/both:
    get:
      tags:
      - Diseases
      operationId: getDiseases
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /diseases/both/{typecode}:
    get:
      tags:
      - Diseases
      operationId: getDiseases_1
      parameters:
      - name: typecode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /diseases/all:
    get:
      tags:
      - Diseases
      operationId: getAllDiseases
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiseaseDTO"
      security:
      - bearerAuth: []
  /bills/pending:
    get:
      tags:
      - Bills
      operationId: getPendingBills
      parameters:
      - name: patient_code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillDTO"
      security:
      - bearerAuth: []
  /bills/pending/affiliate:
    get:
      tags:
      - Bills
      operationId: getPendingBillsAffiliate
      parameters:
      - name: patient_code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillDTO"
      security:
      - bearerAuth: []
  /bills/payments:
    get:
      tags:
      - Bills
      operationId: searchBillsPayments
      parameters:
      - name: datefrom
        in: query
        required: true
        schema:
          type: string
      - name: dateto
        in: query
        required: true
        schema:
          type: string
      - name: patient_code
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillPaymentsDTO"
      security:
      - bearerAuth: []
  /bills/payments/{bill_id}:
    get:
      tags:
      - Bills
      operationId: getPaymentsByBillId
      parameters:
      - name: bill_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillPaymentsDTO"
      security:
      - bearerAuth: []
  /bills/items:
    get:
      tags:
      - Bills
      operationId: getDistinctItems
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillItemsDTO"
      security:
      - bearerAuth: []
  /bills/items/{bill_id}:
    get:
      tags:
      - Bills
      operationId: getItems
      parameters:
      - name: bill_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillItemsDTO"
      security:
      - bearerAuth: []
  /agetypes/{index}:
    get:
      tags:
      - AgeTypes
      operationId: getAgeTypeByIndex
      parameters:
      - name: index
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgeTypeDTO"
      security:
      - bearerAuth: []
  /agetypes/code:
    get:
      tags:
      - AgeTypes
      operationId: getAgeTypeCodeByAge
      parameters:
      - name: age
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
      security:
      - bearerAuth: []
  /admissions/patient/{patientCode}:
    get:
      tags:
      - Admissions
      operationId: getAdmissions_1
      parameters:
      - name: patientCode
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdmissionDTO"
      security:
      - bearerAuth: []
  /admissions/getNextProgressiveIdInYear:
    get:
      tags:
      - Admissions
      operationId: getNextYProg
      parameters:
      - name: wardcode
        in: query
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /admissions/getBedsOccupationInWard:
    get:
      tags:
      - Admissions
      operationId: getUsedWardBed
      parameters:
      - name: wardid
        in: query
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /admissions/discharges:
    get:
      tags:
      - Admissions
      operationId: getDischarges
      parameters:
      - name: dischargerange
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageAdmissionDTO"
      security:
      - bearerAuth: []
  /admissions/current:
    get:
      tags:
      - Admissions
      operationId: getCurrentAdmission
      parameters:
      - name: patientCode
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdmissionDTO"
      security:
      - bearerAuth: []
  /admissions/admittedPatients:
    get:
      tags:
      - Admissions
      operationId: getAdmittedPatients
      parameters:
      - name: searchterms
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: admissionrange
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: dischargerange
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdmittedPatientDTO"
      security:
      - bearerAuth: []
  /wards/{code}:
    delete:
      tags:
      - Wards
      operationId: deleteWard
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /visits/delete/{patID}:
    delete:
      tags:
      - Visit
      operationId: deleteVisitsRelatedToPatient
      parameters:
      - name: patID
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /vaccinetypes/{code}:
    delete:
      tags:
      - Vaccine Type
      operationId: deleteVaccineType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /vaccines/{code}:
    delete:
      tags:
      - Vaccines
      operationId: deleteVaccine
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /operations/rows/{code}:
    delete:
      tags:
      - Operations
      operationId: deleteOperationRow
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicaltypes/{code}:
    delete:
      tags:
      - Medical Types
      operationId: deleteMedicalType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /diseasetypes/{code}:
    delete:
      tags:
      - Disease Types
      operationId: deleteDiseaseType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
      security:
      - bearerAuth: []
  /dischargetypes/{code}:
    delete:
      tags:
      - DischargeType
      operationId: deleteDischargeType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /deliverytypes/{code}:
    delete:
      tags:
      - Delivery Type
      operationId: deleteDeliveryType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /deliveryresulttypes/{code}:
    delete:
      tags:
      - Delivery Result Type
      operationId: deleteDeliveryResultType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /admissiontypes/{code}:
    delete:
      tags:
      - AdmissionTypes
      operationId: deleteAdmissionType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /admissions/{id}:
    delete:
      tags:
      - Admissions
      operationId: deleteAdmissionType_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
components:
  schemas:
    WardDTO:
      required:
      - beds
      - description
      - docs
      - nurs
      - visitDuration
      type: object
      properties:
        code:
          maxLength: 3
          type: string
          description: The ward code
        description:
          maxLength: 50
          type: string
          description: The name of the ward
        telephone:
          maxLength: 50
          type: string
          description: The phone number of the ward
        fax:
          maxLength: 50
          type: string
          description: The fax number of the ward
        email:
          maxLength: 50
          type: string
          description: The email of the ward
        beds:
          type: integer
          format: int32
        nurs:
          type: integer
          format: int32
        docs:
          type: integer
          format: int32
        visitDuration:
          type: integer
          format: int32
        lock:
          type: integer
          description: lock
          format: int32
          example: 0
        pharmacy:
          type: boolean
        male:
          type: boolean
        female:
          type: boolean
        opd:
          type: boolean
    PatientDTO:
      required:
      - age
      - bloodType
      - city
      - fatherName
      - firstName
      - motherName
      - secondName
      - sex
      type: object
      properties:
        code:
          type: integer
          format: int32
          readOnly: true
        firstName:
          maxLength: 50
          type: string
          description: First name of the patient
          example: Mario
        secondName:
          maxLength: 50
          type: string
          description: Last name of the patient
          example: Rossi
        name:
          type: string
          readOnly: true
        birthDate:
          type: string
          description: Birth date
          example: 1979-05-01
        age:
          type: integer
          description: Age
          format: int32
          example: 40
        agetype:
          type: string
          description: Age type
          example: "null"
        sex:
          type: string
          description: Sex
          example: M
          enum:
          - M
          - F
        address:
          maxLength: 50
          type: string
          description: Address
          example: "Via Roma, 12"
        city:
          maxLength: 50
          type: string
          description: City
          example: Verona
        nextKin:
          type: string
          readOnly: true
        telephone:
          maxLength: 50
          type: string
          description: Telephone
          example: "+393456789012"
        note:
          maxLength: 65535
          type: string
          description: Note
          example: Test insert new patient
        motherName:
          maxLength: 50
          type: string
          description: Mother's name
          example: Roberta
        mother:
          type: string
          description: "Mother's status (D=dead, A=alive)"
          example: A
          enum:
          - D
          - A
        fatherName:
          maxLength: 50
          type: string
          description: Father's name
          example: Giuseppe
        father:
          type: string
          description: "Father's status (D=dead, A=alive)"
          example: D
          enum:
          - D
          - A
        bloodType:
          type: string
          description: "Blood type (0-/+, A-/+ , B-/+, AB-/+)"
          example: A+
          enum:
          - 0-
          - 0+
          - A-
          - A+
          - B-
          - B+
          - AB-
          - AB+
        hasInsurance:
          type: string
          description: "HasInsurance (Y=Yes, N=no)"
          example: "N"
          enum:
          - "Y"
          - "N"
        parentTogether:
          type: string
          description: "Parent together (Y=Yes, N=no)"
          example: "N"
          enum:
          - "Y"
          - "N"
        taxCode:
          maxLength: 30
          type: string
          description: Tax code
          example: RSSMRA79E01L781N
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        blobPhoto:
          type: array
          description: BlobPhoto
          items:
            type: string
            description: BlobPhoto
            format: byte
        hashCode:
          type: integer
          format: int32
          readOnly: true
        allergies:
          maxLength: 255
          type: string
          description: Allergies of patient
        anamnesis:
          maxLength: 255
          type: string
          description: Current anamnesis
        status:
          type: string
          description: Status
          example: I
          enum:
          - I
          - O
        consensusFlag:
          type: boolean
          description: Consensus flag
          example: true
        consensusServiceFlag:
          type: boolean
          description: Consensus service flag
          example: true
      description: Class representing a patient
    VisitDTO:
      required:
      - date
      - patient
      type: object
      properties:
        visitID:
          type: integer
          description: The visit's ID
          format: int32
        patient:
          $ref: "#/components/schemas/PatientDTO"
        date:
          type: string
          description: Date of the visit
          example: 2020-03-19T14:58:00
        note:
          maxLength: 65535
          type: string
          description: Note of the visit
        sms:
          type: boolean
          description: Sms of the visit
        ward:
          $ref: "#/components/schemas/WardDTO"
        duration:
          type: integer
          description: Duration of the visit
          format: int32
        service:
          maxLength: 45
          type: string
          description: Service done during the visit
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
      description: Class representing a vaccine type
    VaccineTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 1
          type: string
          description: Code of the vaccine type
          example: C
        description:
          maxLength: 50
          type: string
          description: Description of the vaccine type
          example: Child
      description: Class representing a vaccine type
    VaccineDTO:
      required:
      - code
      - description
      - vaccineType
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Code of the vaccine
          example: "1"
        description:
          maxLength: 50
          type: string
          description: Description of the vaccine
          example: BCG
        vaccineType:
          $ref: "#/components/schemas/VaccineTypeDTO"
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
      description: Class representing a vaccine
    UserSettingDTO:
      required:
      - configName
      - configValue
      - id
      - user
      type: object
      properties:
        id:
          type: integer
          description: The id of the setting (must be unique)
          format: int32
          example: 1
        configName:
          maxLength: 50
          type: string
          description: The name of the setting
          example: dashboard
        user:
          type: string
          description: The name of the user
          example: admin
        configValue:
          maxLength: 65535
          type: string
          description: The value of the user
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    PermissionDTO:
      required:
      - description
      - id
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          description: The permission id
          format: int32
        description:
          maxLength: 255
          type: string
          description: The permission description
      description: List of group's permissions
    UserDTO:
      required:
      - passwd
      - userGroupName
      - userName
      type: object
      properties:
        userName:
          maxLength: 50
          type: string
          description: The username (must be unique)
          example: John Doe
        userGroupName:
          $ref: "#/components/schemas/UserGroupDTO"
        passwd:
          maxLength: 50
          type: string
          description: The user's password
          example: 21@U2g423
        desc:
          maxLength: 128
          type: string
          description: The user's description
          example: Lab chief technician
    UserGroupDTO:
      required:
      - code
      type: object
      properties:
        code:
          maxLength: 50
          type: string
          description: Name of the group (must be unique)
          example: labo
        desc:
          maxLength: 128
          type: string
          description: The description of the group
          example: Staff members working in the laboratory
        permissions:
          type: array
          description: List of group's permissions
          items:
            $ref: "#/components/schemas/PermissionDTO"
      description: The user's group
    UserProfileDTO:
      type: object
      properties:
        userName:
          type: string
        permissions:
          type: array
          items:
            type: string
        userGroup:
          $ref: "#/components/schemas/UserGroupDTO"
    GroupPermissionsDTO:
      type: object
      properties:
        permissions:
          type: array
          description: List of permissions' ids
          example:
          - 48
          - 24
          items:
            type: integer
            description: List of permissions' ids
            format: int32
    SupplierDTO:
      required:
      - supId
      - supName
      type: object
      properties:
        supId:
          type: integer
          format: int32
        supName:
          maxLength: 100
          type: string
          description: The supplier's name
          example: Cogefar
        supAddress:
          maxLength: 150
          type: string
          description: The supplier's address
          example: "25 Rue Ministre, Dschang"
        supTaxcode:
          maxLength: 50
          type: string
          description: The supplier's tax code
          example: "5221"
        supPhone:
          maxLength: 20
          type: string
          description: The supplier's phone
          example: "+237654120145"
        supFax:
          maxLength: 20
          type: string
          description: The supplier's fax number
          example: "+237654120145"
        supEmail:
          maxLength: 100
          type: string
          description: The supplier's e-mail address
          example: suplier@sample.com
        supNote:
          maxLength: 200
          type: string
          description: The supplier's notes
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    PricesOthersDTO:
      required:
      - code
      - daily
      - description
      - ipdInclude
      - opdInclude
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          maxLength: 10
          type: string
          description: The prices code
          example: PRICES001
        description:
          maxLength: 100
          type: string
          description: The description
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        opdInclude:
          type: boolean
        ipdInclude:
          type: boolean
        daily:
          type: boolean
        discharge:
          type: boolean
        undefined:
          type: boolean
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a price others
    PriceListDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          maxLength: 7
          type: string
          description: The price list code
          example: LISTE1
        name:
          maxLength: 50
          type: string
          description: The name of the price list
          example: default price list
        description:
          maxLength: 100
          type: string
          description: The price list description
          example: default price list
        currency:
          maxLength: 10
          type: string
          description: The currency
          example: FCFA
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a price list
    PregnantTreatmentTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: The code
        description:
          maxLength: 50
          type: string
          description: The description
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a pregnant treatment type
    PatientVaccineDTO:
      required:
      - patient
      - progr
      - vaccine
      - vaccineDate
      type: object
      properties:
        code:
          type: integer
          format: int32
        progr:
          type: integer
          description: A progr. in year
          format: int32
          example: 1
        vaccineDate:
          type: string
          description: The vaccine date
        patient:
          $ref: "#/components/schemas/PatientDTO"
        vaccine:
          $ref: "#/components/schemas/VaccineDTO"
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        hashCode:
          type: integer
          format: int32
          readOnly: true
    PatientConsensusDTO:
      required:
      - patientId
      type: object
      properties:
        consensusFlag:
          type: boolean
          description: Consensus flag
        serviceFlag:
          type: boolean
          description: Service flag
        patientId:
          type: integer
          description: Patient id
          format: int32
      description: Class representing a patient consensus
    OperationTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 2
          type: string
          description: The operation code
        description:
          maxLength: 50
          type: string
          description: The operation type
    OperationDTO:
      required:
      - code
      - description
      - major
      - opeFor
      - type
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: The code of operation
        description:
          maxLength: 50
          type: string
          description: The operation description
        type:
          $ref: "#/components/schemas/OperationTypeDTO"
        opeFor:
          type: string
          description: The operation context
          example: opd_admission
          enum:
          - opd_admission
          - admission
          - opd
        major:
          type: integer
          description: The operation major
          format: int32
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    AdmissionDTO:
      required:
      - admDate
      - admitted
      - deleted
      - type
      type: object
      properties:
        id:
          type: integer
          description: Admission key
          format: int32
          example: 12
        admitted:
          type: integer
          description: If admitted or not
          format: int32
          example: 0
        type:
          type: string
          description: Type of admission
          example: "N"
        ward:
          $ref: "#/components/schemas/WardDTO"
        patient:
          $ref: "#/components/schemas/PatientDTO"
        admDate:
          type: string
          description: Admission date
        admType:
          $ref: "#/components/schemas/AdmissionTypeDTO"
        diseaseIn:
          $ref: "#/components/schemas/DiseaseDTO"
        diseaseOut1:
          $ref: "#/components/schemas/DiseaseDTO"
        diseaseOut2:
          $ref: "#/components/schemas/DiseaseDTO"
        diseaseOut3:
          $ref: "#/components/schemas/DiseaseDTO"
        operation:
          $ref: "#/components/schemas/OperationDTO"
        opDate:
          type: string
          description: Operation date
        opResult:
          type: string
          description: 'Operation result value is ''P'' or ''N'' '
          example: "N"
        disDate:
          type: string
          description: Discharge date
        disType:
          $ref: "#/components/schemas/DischargeTypeDTO"
        note:
          maxLength: 65535
          type: string
          description: Free note
        transUnit:
          type: number
          description: Transfusional unit
          format: float
        visitDate:
          type: string
          description: Visit date
        pregTreatmentType:
          $ref: "#/components/schemas/PregnantTreatmentTypeDTO"
        deliveryDate:
          type: string
          description: Delivery date
        deliveryType:
          $ref: "#/components/schemas/DeliveryTypeDTO"
        deliveryResult:
          $ref: "#/components/schemas/DeliveryResultTypeDTO"
        weight:
          type: number
          description: Weight
          format: float
        ctrlDate1:
          type: string
          format: date-time
        ctrlDate2:
          type: string
          format: date-time
        abortDate:
          type: string
          format: date-time
        userID:
          type: string
          description: User id
        hashCode:
          type: integer
          format: int32
          readOnly: true
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        deleted:
          type: string
          description: "Flag record deleted, values are 'Y' OR 'N' "
          example: "N"
        yprog:
          type: integer
          format: int32
        fhu:
          type: string
      description: The admission
    AdmissionTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Code of the admission type
          example: A
        description:
          maxLength: 50
          type: string
          description: Description of the admission type
          example: AMBULANCE
      description: Admission type
    BillDTO:
      required:
      - amount
      - balance
      - date
      - listName
      - patName
      - patientTrue
      - status
      - update
      - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        patient:
          $ref: "#/components/schemas/PatientDTO"
        listId:
          type: integer
          format: int32
        date:
          type: string
          description: Date of bill creation
          example: 2020-03-19T14:58:00.000Z
        update:
          type: string
          description: Date of bill updated
          example: 2020-03-19T14:58:00.000Z
        listName:
          maxLength: 50
          type: string
          description: Price list name
          example: Basic
        patientTrue:
          type: boolean
          description: Is bill belongs to a patient?
          example: true
        patName:
          maxLength: 100
          type: string
          description: Patient name
          example: Mario Rossi
        status:
          type: string
          description: Bill status
          example: O
        amount:
          type: number
          description: Bill Amount
          format: double
          example: 1000
        balance:
          type: number
          description: Bill balance
          format: double
          example: 1500
        user:
          type: string
          description: user name who create the bill
          example: admin
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        list:
          type: boolean
      description: Class representing a bill
    DeliveryResultTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Code of the delivery result type
          example: M
        description:
          maxLength: 50
          type: string
          description: Description of the delivery result type
          example: MORTALITÉ MATERNELLE
      description: Delivery result type
    DeliveryTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Code of the delivery type
          example: "N"
        description:
          maxLength: 50
          type: string
          description: Description of the delivery type
          example: ACCOUCHEMENT NORMAL
      description: Delivery type
    DischargeTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Code of the discharge type
          example: SN
        description:
          maxLength: 50
          type: string
          description: Description of the discharge type
          example: SORTIE NORMALE
      description: DisChargeType
    DiseaseDTO:
      required:
      - code
      - description
      - diseaseType
      - ipdInInclude
      - ipdOutInclude
      - opdInclude
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Disease code
          example: "99"
        description:
          maxLength: 50
          type: string
          description: Disease description
        diseaseType:
          $ref: "#/components/schemas/DiseaseTypeDTO"
        opdInclude:
          type: boolean
          description: Indicates whether the disease is an OPD disease
          example: true
        ipdInInclude:
          type: boolean
          description: Indicates whether the disease is an IPD-IN disease
          example: true
        ipdOutInclude:
          type: boolean
          description: Indicates whether the disease is an IPD-OUT disease
          example: true
        hashCode:
          type: integer
          format: int32
          readOnly: true
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
      description: Class representing a disease
    DiseaseTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 2
          type: string
          description: Disease type code
        description:
          maxLength: 110
          type: string
          description: Disease type description
      description: Class representing a disease type
    OpdDTO:
      required:
      - age
      - newPatient
      - note
      - sex
      - ward
      type: object
      properties:
        code:
          type: integer
          description: The code of the opd
          format: int32
          example: 3
        date:
          type: string
          description: The date of the admission
        nextVisitDate:
          type: string
          description: The next visit date
        patientCode:
          type: integer
          description: The admitted patient code
          format: int32
        age:
          type: integer
          description: The patient age
          format: int32
          example: 18
        sex:
          type: string
          description: The patient sex
          example: M
        patientName:
          type: string
          description: The patient sex
          example: M
        ageType:
          type: string
          description: Age type
          example: "null"
        note:
          maxLength: 65535
          type: string
          description: The admission note
          example: this is out patient
        prog_year:
          type: integer
          description: A progr. in year for each ward
          format: int32
          example: 18
        disease:
          $ref: "#/components/schemas/DiseaseDTO"
        disease2:
          $ref: "#/components/schemas/DiseaseDTO"
        disease3:
          $ref: "#/components/schemas/DiseaseDTO"
        newPatient:
          type: string
          description: New(N) or Reattendance(R) patient
          example: "N"
        referralFrom:
          type: string
          description: Referral from another unit
          example: R
        referralTo:
          type: string
          description: Referral to another unit
          example: R
        userID:
          type: string
          description: User id
        lock:
          type: integer
          format: int32
          readOnly: true
        hashCode:
          type: integer
          format: int32
          readOnly: true
        reason:
          type: string
          description: Reasons for entry
        anamnesis:
          type: string
          description: History of a medical or psychiatric patient
        allergies:
          type: string
          description: Allergies of patient
        therapies:
          type: string
          description: Current therapies
        prescription:
          maxLength: 255
          type: string
          description: Prescription
        ward:
          $ref: "#/components/schemas/WardDTO"
      description: The opd
    OperationRowDTO:
      required:
      - opDate
      - opResult
      - operation
      - prescriber
      type: object
      properties:
        id:
          type: integer
          format: int32
        operation:
          $ref: "#/components/schemas/OperationDTO"
        prescriber:
          maxLength: 150
          type: string
          description: The presciber of the operation
        opResult:
          maxLength: 250
          type: string
          description: The result of the operation
        opDate:
          type: string
          description: Operation registration date
        remarks:
          maxLength: 250
          type: string
          description: The remark of the operation
        admission:
          $ref: "#/components/schemas/AdmissionDTO"
        opd:
          $ref: "#/components/schemas/OpdDTO"
        bill:
          $ref: "#/components/schemas/BillDTO"
        transUnit:
          type: number
          description: The transunit
          format: float
        hashCode:
          type: integer
          format: int32
          readOnly: true
    OpdWithOperationRowDTO:
      type: object
      properties:
        opdDTO:
          $ref: "#/components/schemas/OpdDTO"
        operationRows:
          type: array
          items:
            $ref: "#/components/schemas/OperationRowDTO"
    MovementTypeDTO:
      required:
      - code
      - description
      - type
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Code of the movement type
          example: D
        description:
          maxLength: 50
          type: string
          description: Description of the movement type
          example: Damage
        type:
          type: string
          description: Type of the movement type
          example: "-"
    MedicalTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 1
          type: string
          description: Code of the medical type
          example: M
        description:
          maxLength: 30
          type: string
          description: Description of the medical type
          example: Medical material
    MedicalDTO:
      type: object
      properties:
        code:
          maxLength: 5
          type: integer
          description: The id of the medical
          format: int32
          example: 1
        prod_code:
          type: string
          description: The product code
          example: PARA
        type:
          $ref: "#/components/schemas/MedicalTypeDTO"
        description:
          maxLength: 100
          type: string
          description: The description of the medical
          example: Paracétamol
        initialqty:
          type: number
          description: The initial quantity of the medical
          format: double
          example: 21
        pcsperpck:
          type: integer
          description: The number of pieces per packet
          format: int32
          example: 100
        inqty:
          type: number
          description: The input quantity of the medical
          format: double
          example: 340
        outqty:
          type: number
          description: The out quantity of the medical
          format: double
          example: 8
        minqty:
          type: number
          description: The min quantity of the medical
          format: double
          example: 15
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    MalnutritionDTO:
      required:
      - admission
      - dateSupp
      - height
      - weight
      type: object
      properties:
        code:
          type: integer
          description: The code malnutrition control
          format: int32
          example: 1
        dateSupp:
          type: string
          description: The date of this malnutrition control
          example: 1979-05-01T11:20:33
        dateConf:
          type: string
          description: The date of the next malnutrition control
          example: 1979-05-01T11:20:33
        admission:
          $ref: "#/components/schemas/AdmissionDTO"
        height:
          type: number
          description: The height of the patient
          format: float
          example: 165
        weight:
          type: number
          description: The weight of the patient
          format: float
          example: 65
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    ExamDTO:
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Exam Code
          example: "01.01"
        description:
          maxLength: 100
          type: string
          description: Exam Description
          example: 1.1 HB
        procedure:
          type: integer
          description: Exam Procedure
          format: int32
          example: 1
        defaultResult:
          maxLength: 50
          type: string
          description: Exam Default Result
          example: '>=12 (NORMAL)'
        examtype:
          $ref: "#/components/schemas/ExamTypeDTO"
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
      description: Laboratory Exam
    ExamTypeDTO:
      type: object
      properties:
        code:
          type: string
          description: Exam Type Code
          example: HB
        description:
          maxLength: 50
          type: string
          description: Exam Type Description
          example: 1.Haematology
      description: Exam Type
    LabWithRowsDTO:
      type: object
      properties:
        laboratoryDTO:
          $ref: "#/components/schemas/LaboratoryDTO"
        laboratoryRowList:
          type: array
          items:
            type: string
    LaboratoryDTO:
      type: object
      properties:
        code:
          type: integer
          description: Laboratory Code
          format: int32
        material:
          type: string
          description: Laboratory Material
          example: Blood
        exam:
          $ref: "#/components/schemas/ExamDTO"
        registrationDate:
          type: string
          description: Laboratory Registration Date
        labDate:
          type: string
          description: Laboratory Exam Date
        result:
          type: string
          description: Laboratory Result
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        note:
          maxLength: 255
          type: string
          description: Laboratory Note
          example: Note by laboratorist
        patientCode:
          type: integer
          description: Laboratory Patient Code
          format: int32
        patName:
          type: string
          description: Laboratory Patient Name
        inOutPatient:
          type: string
          description: Laboratory Patient InOut
          example: "0"
          enum:
          - I
          - O
        age:
          type: integer
          description: Laboratory Patient Age
          format: int32
        sex:
          type: string
          description: Laboratory Patient Sex
          example: M
        status:
          type: string
          description: Laboratory status
          example: DRAFT
          enum:
          - draft
          - open
          - done
          - invalid
          - deleted
    HospitalDTO:
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Hospital Code
          example: STLUKE
        description:
          maxLength: 255
          type: string
          description: Hospital Description
          example: St. Luke HOSPITAL - Angal
        address:
          maxLength: 255
          type: string
          description: Hospital Address
          example: Hospital Address
        city:
          maxLength: 255
          type: string
          description: Hospital City
          example: Hospital City
        telephone:
          maxLength: 50
          type: string
          description: Hospital Telephone
          example: +123 0123456789
        fax:
          maxLength: 50
          type: string
          description: Hospital Fax
          example: +123 0123456789
        email:
          maxLength: 50
          type: string
          description: Hospital Email
          example: hospital@isf.email.xx
        currencyCod:
          maxLength: 3
          type: string
          description: Hospital Currency Cod
          example: EUR
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    ExamWithRowsDTO:
      required:
      - exam
      type: object
      properties:
        exam:
          $ref: "#/components/schemas/ExamDTO"
        rows:
          type: array
          description: Possible result for the exam(only for exams with procedure
            1 and 2)
          example: "['>=12 (NORMAL)', 'IRREGULAR']"
          items:
            type: string
            description: Possible result for the exam(only for exams with procedure
              1 and 2)
            example: "['>=12 (NORMAL)', 'IRREGULAR']"
    PatientExaminationDTO:
      required:
      - patientCode
      - pex_date
      type: object
      properties:
        pex_ID:
          type: integer
          description: Patient Examination Id
          format: int32
          example: 1
        pex_date:
          type: string
          description: Date of Patient Examination
          example: 2020-03-19T14:58:00.000Z
        patientCode:
          type: integer
          description: Patient Examination Code
          format: int32
        pex_height:
          type: integer
          description: Patient Height in cm
          format: int32
        pex_weight:
          type: number
          description: Patient Weight in Kg
          format: double
        pex_ap_min:
          type: integer
          description: Blood Pressure MIN in mmHg
          format: int32
        pex_ap_max:
          type: integer
          description: Blood Pressure MAX in mmHg
          format: int32
        pex_rr:
          type: integer
          description: Respiratory Rate in bpm
          format: int32
        pex_temp:
          type: number
          description: Patient Temperature in °C
          format: double
        pex_sat:
          type: number
          description: Patient Saturation in %
          format: double
        pex_hr:
          type: integer
          description: Heart Rate in Apm
          format: int32
        pex_auscultation:
          type: string
          description: Patient ausculation
          example: normal
          enum:
          - normal
          - wheezes
          - rhonchi
          - crackles
          - stridor
          - bronchial
        pex_hgt:
          type: integer
          description: Hemo Glucose Test
          format: int32
        pex_diuresis:
          type: integer
          description: Daily urine Volume in ml
          format: int32
        pex_diuresis_desc:
          type: string
          description: Diuresis description
          example: physiological
          enum:
          - physiological
          - oliguria
          - anuria
          - frequent
          - nocturia
          - stranguria
          - hematuria
          - pyuria
        pex_note:
          maxLength: 2000
          type: string
          description: Examination Note
        pex_bowel_desc:
          type: string
          description: Bowel Function
          example: regular
          enum:
          - constipation
          - regular
          - diarrheal
          - irregular
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    BillItemsDTO:
      required:
      - itemAmount
      - itemDescription
      - itemDisplayCode
      - itemId
      - itemQuantity
      - priceId
      type: object
      properties:
        id:
          type: integer
          format: int32
        billId:
          type: integer
          description: Bill id
          format: int32
        priceId:
          type: string
          description: The price Id
          example: "104"
        itemDescription:
          type: string
          description: Item description
          example: Acetone 99 % 1ltr
        itemAmount:
          type: number
          description: Item amount
          format: double
          example: 1000
        itemQuantity:
          type: integer
          description: Item quantity
          format: int32
          example: 1
        itemDisplayCode:
          type: string
          description: Item display code
          example: Acetone
        itemId:
          type: string
          description: Item id
          example: "3"
        hashCode:
          type: integer
          format: int32
          readOnly: true
        price:
          type: boolean
      description: Class representing a billItem
    BillPaymentsDTO:
      required:
      - amount
      - billId
      - date
      - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        billId:
          type: integer
          description: Bill id
          format: int32
        date:
          type: string
          description: Date of payment
          format: date-time
          example: 2020-03-19T14:58:00Z
        amount:
          type: number
          description: The payment amount
          format: double
          example: 500
        user:
          type: string
          description: The current user
          example: admin
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a billPayment
    FullBillDTO:
      required:
      - bill
      - billItems
      type: object
      properties:
        bill:
          $ref: "#/components/schemas/BillDTO"
        billItems:
          type: array
          description: List of bill items elements
          items:
            $ref: "#/components/schemas/BillItemsDTO"
        billPayments:
          type: array
          description: List of bill payments elements
          items:
            $ref: "#/components/schemas/BillPaymentsDTO"
    AgeTypeDTO:
      required:
      - description
      - from
      - to
      type: object
      properties:
        code:
          type: string
          description: Age type code
        description:
          maxLength: 100
          type: string
          description: Age type description
        from:
          type: integer
          description: The minimum value of the range
          format: int32
          example: 0
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        to:
          type: integer
          description: The maximum value of the range
          format: int32
          example: 0
      description: Class representing an age type which is typically a range
    TherapyRowDTO:
      required:
      - endDate
      - freqInDay
      - freqInPeriod
      - medicalId
      - notifyInt
      - patID
      - qty
      - smsInt
      - startDate
      - unitID
      type: object
      properties:
        therapyID:
          type: integer
          description: The therapy's ID
          format: int32
          example: 1
        patID:
          $ref: "#/components/schemas/PatientDTO"
        startDate:
          type: string
          description: The start date of therapy
          format: date-time
        endDate:
          type: string
          description: The end date of the therapy
          format: date-time
        medicalId:
          type: integer
          description: The ID of the medical concerned by the therapy
          format: int32
          example: 1
        qty:
          type: number
          description: The quantity of medicals
          format: double
          example: 48
        unitID:
          type: integer
          description: The unit's ID
          format: int32
          example: 1
        freqInDay:
          type: integer
          description: The frequency in day
          format: int32
          example: 2
        freqInPeriod:
          type: integer
          description: The frequency in period
          format: int32
          example: 1
        note:
          maxLength: 65535
          type: string
          description: A note for the therapy
          example: Sample note
        notifyInt:
          type: integer
          description: "the notify flag: 1 if the notification need to be activated,\
            \ 0 otherwise"
          format: int32
          example: 0
        smsInt:
          type: integer
          description: "The sms flag: 1 if sms need to be sent to patient, 0 otherwise"
          format: int32
          example: 0
    Patient:
      required:
      - age
      - birthDate
      - bloodType
      - city
      - deleted
      - fatherName
      - firstName
      - motherName
      - name
      - secondName
      - sex
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        active:
          type: integer
          format: int32
        code:
          type: integer
          format: int32
        firstName:
          type: string
        secondName:
          type: string
        name:
          type: string
        birthDate:
          type: string
          format: date
        age:
          type: integer
          format: int32
        agetype:
          type: string
        sex:
          type: string
        address:
          type: string
        city:
          type: string
        nextKin:
          type: string
        telephone:
          type: string
        note:
          type: string
        motherName:
          type: string
        mother:
          type: string
        fatherName:
          type: string
        father:
          type: string
        bloodType:
          type: string
        hasInsurance:
          type: string
        parentTogether:
          type: string
        taxCode:
          type: string
        maritalStatus:
          type: string
        profession:
          type: string
        deleted:
          type: string
        anamnesis:
          type: string
        allergies:
          type: string
        lock:
          type: integer
          format: int32
        patientProfilePhoto:
          $ref: "#/components/schemas/PatientProfilePhoto"
        patientConsensus:
          $ref: "#/components/schemas/PatientConsensus"
        informations:
          type: string
        searchString:
          type: string
    PatientConsensus:
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        active:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        consensusFlag:
          type: boolean
        serviceFlag:
          type: boolean
        patient:
          $ref: "#/components/schemas/Patient"
    PatientProfilePhoto:
      type: object
      properties:
        patient:
          $ref: "#/components/schemas/Patient"
        photo:
          type: array
          items:
            type: string
            format: byte
        photoAsImage:
          type: object
          properties:
            accelerationPriority:
              type: number
              format: float
            source:
              type: object
            graphics:
              type: object
              properties:
                color:
                  type: object
                  properties:
                    red:
                      type: integer
                      format: int32
                    green:
                      type: integer
                      format: int32
                    blue:
                      type: integer
                      format: int32
                    alpha:
                      type: integer
                      format: int32
                    colorSpace:
                      type: object
                      properties:
                        type:
                          type: integer
                          format: int32
                        numComponents:
                          type: integer
                          format: int32
                        cs_sRGB:
                          type: boolean
                    rgb:
                      type: integer
                      format: int32
                    transparency:
                      type: integer
                      format: int32
                font:
                  type: object
                  properties:
                    name:
                      type: string
                    style:
                      type: integer
                      format: int32
                    size:
                      type: integer
                      format: int32
                    attributes:
                      type: object
                      additionalProperties:
                        type: object
                    family:
                      type: string
                    plain:
                      type: boolean
                    fontName:
                      type: string
                    transform:
                      type: object
                      properties:
                        scaleX:
                          type: number
                          format: double
                        shearY:
                          type: number
                          format: double
                        shearX:
                          type: number
                          format: double
                        scaleY:
                          type: number
                          format: double
                        translateX:
                          type: number
                          format: double
                        translateY:
                          type: number
                          format: double
                        type:
                          type: integer
                          format: int32
                        identity:
                          type: boolean
                        toRotation:
                          type: number
                          format: double
                          writeOnly: true
                        toQuadrantRotation:
                          type: integer
                          format: int32
                          writeOnly: true
                        determinant:
                          type: number
                          format: double
                    bold:
                      type: boolean
                    italic:
                      type: boolean
                    numGlyphs:
                      type: integer
                      format: int32
                    missingGlyphCode:
                      type: integer
                      format: int32
                    italicAngle:
                      type: number
                      format: float
                    transformed:
                      type: boolean
                    psname:
                      type: string
                    size2D:
                      type: number
                      format: float
                    availableAttributes:
                      type: array
                      items:
                        type: object
                fontMetrics:
                  type: object
                  properties:
                    font:
                      type: object
                      properties:
                        name:
                          type: string
                        style:
                          type: integer
                          format: int32
                        size:
                          type: integer
                          format: int32
                        attributes:
                          type: object
                          additionalProperties:
                            type: object
                        family:
                          type: string
                        plain:
                          type: boolean
                        fontName:
                          type: string
                        transform:
                          type: object
                          properties:
                            scaleX:
                              type: number
                              format: double
                            shearY:
                              type: number
                              format: double
                            shearX:
                              type: number
                              format: double
                            scaleY:
                              type: number
                              format: double
                            translateX:
                              type: number
                              format: double
                            translateY:
                              type: number
                              format: double
                            type:
                              type: integer
                              format: int32
                            identity:
                              type: boolean
                            toRotation:
                              type: number
                              format: double
                              writeOnly: true
                            toQuadrantRotation:
                              type: integer
                              format: int32
                              writeOnly: true
                            determinant:
                              type: number
                              format: double
                        bold:
                          type: boolean
                        italic:
                          type: boolean
                        numGlyphs:
                          type: integer
                          format: int32
                        missingGlyphCode:
                          type: integer
                          format: int32
                        italicAngle:
                          type: number
                          format: float
                        transformed:
                          type: boolean
                        psname:
                          type: string
                        size2D:
                          type: number
                          format: float
                        availableAttributes:
                          type: array
                          items:
                            type: object
                    height:
                      type: integer
                      format: int32
                    ascent:
                      type: integer
                      format: int32
                    descent:
                      type: integer
                      format: int32
                    leading:
                      type: integer
                      format: int32
                    maxDescent:
                      type: integer
                      format: int32
                    widths:
                      type: array
                      items:
                        type: integer
                        format: int32
                    fontRenderContext:
                      type: object
                      properties:
                        transform:
                          type: object
                          properties:
                            scaleX:
                              type: number
                              format: double
                            shearY:
                              type: number
                              format: double
                            shearX:
                              type: number
                              format: double
                            scaleY:
                              type: number
                              format: double
                            translateX:
                              type: number
                              format: double
                            translateY:
                              type: number
                              format: double
                            type:
                              type: integer
                              format: int32
                            identity:
                              type: boolean
                            toRotation:
                              type: number
                              format: double
                              writeOnly: true
                            toQuadrantRotation:
                              type: integer
                              format: int32
                              writeOnly: true
                            determinant:
                              type: number
                              format: double
                        antiAliasingHint:
                          type: object
                        fractionalMetricsHint:
                          type: object
                        transformed:
                          type: boolean
                        antiAliased:
                          type: boolean
                        transformType:
                          type: integer
                          format: int32
                    maxAscent:
                      type: integer
                      format: int32
                    maxDecent:
                      type: integer
                      format: int32
                      deprecated: true
                    maxAdvance:
                      type: integer
                      format: int32
                clipBounds:
                  type: object
                  properties:
                    x:
                      type: number
                      format: double
                    "y":
                      type: number
                      format: double
                    width:
                      type: number
                      format: double
                    height:
                      type: number
                      format: double
                    empty:
                      type: boolean
                    location:
                      type: object
                      properties:
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                    size:
                      type: object
                      properties:
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                    bounds2D:
                      type: object
                      properties:
                        empty:
                          type: boolean
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                    rect:
                      type: object
                      properties:
                        empty:
                          type: boolean
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                      writeOnly: true
                    minX:
                      type: number
                      format: double
                    minY:
                      type: number
                      format: double
                    maxX:
                      type: number
                      format: double
                    maxY:
                      type: number
                      format: double
                    centerX:
                      type: number
                      format: double
                    centerY:
                      type: number
                      format: double
                xormode:
                  type: object
                  properties:
                    red:
                      type: integer
                      format: int32
                    green:
                      type: integer
                      format: int32
                    blue:
                      type: integer
                      format: int32
                    alpha:
                      type: integer
                      format: int32
                    colorSpace:
                      type: object
                      properties:
                        type:
                          type: integer
                          format: int32
                        numComponents:
                          type: integer
                          format: int32
                        cs_sRGB:
                          type: boolean
                    rgb:
                      type: integer
                      format: int32
                    transparency:
                      type: integer
                      format: int32
                  writeOnly: true
                clip:
                  type: object
                  properties:
                    bounds:
                      type: object
                      properties:
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        empty:
                          type: boolean
                        location:
                          type: object
                          properties:
                            x:
                              type: number
                              format: double
                            "y":
                              type: number
                              format: double
                        size:
                          type: object
                          properties:
                            width:
                              type: number
                              format: double
                            height:
                              type: number
                              format: double
                        bounds2D:
                          type: object
                          properties:
                            empty:
                              type: boolean
                            minX:
                              type: number
                              format: double
                            minY:
                              type: number
                              format: double
                            width:
                              type: number
                              format: double
                            height:
                              type: number
                              format: double
                            maxX:
                              type: number
                              format: double
                            maxY:
                              type: number
                              format: double
                            centerX:
                              type: number
                              format: double
                            centerY:
                              type: number
                              format: double
                            "y":
                              type: number
                              format: double
                            x:
                              type: number
                              format: double
                        rect:
                          type: object
                          properties:
                            empty:
                              type: boolean
                            minX:
                              type: number
                              format: double
                            minY:
                              type: number
                              format: double
                            width:
                              type: number
                              format: double
                            height:
                              type: number
                              format: double
                            maxX:
                              type: number
                              format: double
                            maxY:
                              type: number
                              format: double
                            centerX:
                              type: number
                              format: double
                            centerY:
                              type: number
                              format: double
                            "y":
                              type: number
                              format: double
                            x:
                              type: number
                              format: double
                          writeOnly: true
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                    bounds2D:
                      type: object
                      properties:
                        empty:
                          type: boolean
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                clipRect:
                  type: object
                  properties:
                    x:
                      type: number
                      format: double
                    "y":
                      type: number
                      format: double
                    width:
                      type: number
                      format: double
                    height:
                      type: number
                      format: double
                    empty:
                      type: boolean
                    location:
                      type: object
                      properties:
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                    size:
                      type: object
                      properties:
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                    bounds2D:
                      type: object
                      properties:
                        empty:
                          type: boolean
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                    rect:
                      type: object
                      properties:
                        empty:
                          type: boolean
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                      writeOnly: true
                    minX:
                      type: number
                      format: double
                    minY:
                      type: number
                      format: double
                    maxX:
                      type: number
                      format: double
                    maxY:
                      type: number
                      format: double
                    centerX:
                      type: number
                      format: double
                    centerY:
                      type: number
                      format: double
                  deprecated: true
    TherapyRow:
      required:
      - endDate
      - freqInDay
      - freqInPeriod
      - medicalId
      - notifyInt
      - patient
      - qty
      - smsInt
      - startDate
      - unitID
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        active:
          type: integer
          format: int32
        therapyID:
          type: integer
          format: int32
        patient:
          $ref: "#/components/schemas/Patient"
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        medicalId:
          type: integer
          format: int32
        qty:
          type: number
          format: double
        unitID:
          type: integer
          format: int32
        freqInDay:
          type: integer
          format: int32
        freqInPeriod:
          type: integer
          format: int32
        note:
          type: string
        notifyInt:
          type: integer
          format: int32
        smsInt:
          type: integer
          format: int32
        medical:
          type: integer
          format: int32
        sms:
          type: boolean
        notify:
          type: boolean
    TherapyDTO:
      type: object
      properties:
        therapyID:
          type: integer
          description: The therapy's ID
          format: int32
          example: 1
        patID:
          type: integer
          description: The patient's ID
          format: int32
          example: 1
        dates:
          type: array
          description: The dates of the therapy
          example:
          - 2022-01-01T10:00:00
          - 2022-01-02T15:30:00
          items:
            type: string
            description: The dates of the therapy
            format: date-time
        medical:
          $ref: "#/components/schemas/MedicalDTO"
        qty:
          type: number
          description: The quantity of the medical
          format: double
          example: 48
        units:
          type: string
          description: The units
        freqInDay:
          type: integer
          description: The frequency in day
          format: int32
          example: 2
        note:
          maxLength: 65535
          type: string
          description: A note for the therapy
          example: Sample note
        notify:
          type: boolean
          description: "The notify flag: true if the notification need to be activated,\
            \ false otherwise"
          example: false
        sms:
          type: boolean
          description: "The sms flag: true if sms need to be sent to patient, false\
            \ otherwise"
          example: false
    LotDTO:
      required:
      - code
      - dueDate
      - preparationDate
      type: object
      properties:
        code:
          maxLength: 50
          type: string
          description: The lot's code
          example: LT001
        preparationDate:
          type: string
          description: The preparation date
          example: 2020-06-24
        dueDate:
          type: string
          description: The due date
          example: 2021-06-24
        cost:
          type: number
          description: The lot's code
          example: 750
      description: The lot
    MovementDTO:
      required:
      - date
      - medical
      - quantity
      - refNo
      - type
      type: object
      properties:
        code:
          type: integer
          description: The movement code
          format: int32
          example: 1
        medical:
          $ref: "#/components/schemas/MedicalDTO"
        type:
          $ref: "#/components/schemas/MovementTypeDTO"
        ward:
          $ref: "#/components/schemas/WardDTO"
        lot:
          $ref: "#/components/schemas/LotDTO"
        date:
          type: string
          description: The movement date
          example: 2020-06-24
        quantity:
          type: integer
          description: The movement's medical quantity
          format: int32
          example: 50
        supplier:
          $ref: "#/components/schemas/SupplierDTO"
        refNo:
          type: string
          description: The movement reference
          example: MVN152445
    SmsDTO:
      required:
      - module
      - smsDate
      - smsDateSched
      - smsNumber
      - smsText
      - smsUser
      type: object
      properties:
        smsId:
          type: integer
          description: SMS Id
          format: int32
          example: 1
        smsDate:
          type: string
          description: SMS Date
          format: date-time
        smsDateSched:
          type: string
          description: SMS scheduled date
          example: 2020-07-28T00:00:00
        smsNumber:
          maxLength: 45
          type: string
          description: SMS target phone number
          example: "+237671302313"
        smsText:
          maxLength: 160
          type: string
          description: SMS content text
          example: Hi Mario.
        smsDateSent:
          type: string
          description: SMS sent date
          example: 2020-07-28T00:00:00
        smsUser:
          maxLength: 50
          type: string
          description: SMS user
          example: Rosi
        module:
          maxLength: 45
          type: string
          description: SMS module name
          example: OPD
        moduleID:
          maxLength: 45
          type: string
          description: SMS module Id
    MovementWardDTO:
      required:
      - date
      - description
      - quantity
      - units
      - ward
      type: object
      properties:
        code:
          type: integer
          description: The movement ward's code
          format: int32
          example: 1
        ward:
          $ref: "#/components/schemas/WardDTO"
        date:
          type: string
          description: The movement ward's date
          format: date
          example: 2020-06-07
        patient:
          $ref: "#/components/schemas/PatientDTO"
        age:
          type: integer
          description: The patient's age in case the movement is associated to a patient
          format: int32
          example: 21
        weight:
          type: number
          description: The patient's weight in case the movement is associated to
            a patient
          format: float
          example: 75
        description:
          type: string
          description: The description of the movement
          example: stock transfer from pharmacy to laboratory
        medical:
          $ref: "#/components/schemas/MedicalDTO"
        quantity:
          type: number
          description: The quantity of the medical concerned by the movement
          format: double
          example: 145
        units:
          type: string
          description: The measure's unit of the medical concerned by the movement
          example: pct
        wardTo:
          $ref: "#/components/schemas/WardDTO"
        wardFrom:
          $ref: "#/components/schemas/WardDTO"
    ExamRowDTO:
      type: object
      properties:
        code:
          type: integer
          description: Exam Row Code
          format: int32
          example: 999
        description:
          type: string
          description: Exam Row Code
          example: NEGATIVE
        exam:
          $ref: "#/components/schemas/ExamDTO"
    TokenRefreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: Token
        refreshToken:
          type: string
          description: RefreshToken
        type:
          type: string
          description: Type of Token
          example: Bearer
        username:
          type: string
          description: User name
          example: admin
      description: Class representing a Login response
    LoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: User Name
          example: admin
        password:
          type: string
          description: Password of user
          example: admin
    PriceDTO:
      required:
      - description
      - group
      - item
      - list
      - price
      type: object
      properties:
        id:
          type: integer
          format: int32
        list:
          $ref: "#/components/schemas/PriceList"
        group:
          type: string
          description: The group
        item:
          maxLength: 10
          type: string
          description: The item name
        description:
          maxLength: 100
          type: string
          description: The description
        price:
          type: number
          description: Price
          format: double
          example: 1500
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        editable:
          type: boolean
          readOnly: true
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a prices
    PriceList:
      required:
      - code
      - currency
      - description
      - name
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        active:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        description:
          type: string
        currency:
          type: string
      description: The price list
    PageInfoDTO:
      type: object
      properties:
        size:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        nbOfElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int64
        totalNbOfElements:
          type: integer
          format: int64
        hasPreviousPage:
          type: boolean
        hasNextPage:
          type: boolean
    PagePatientDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PatientDTO"
        pageInfo:
          $ref: "#/components/schemas/PageInfoDTO"
    PageOpdDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/OpdDTO"
        pageInfo:
          $ref: "#/components/schemas/PageInfoDTO"
    MedicalWardDTO:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/MedicalWardIdDTO"
        in_quantity:
          type: number
          description: The in-quantity
          format: float
          example: 150
        out_quantity:
          type: number
          description: The out-quantity
          format: float
          example: 89
    MedicalWardIdDTO:
      required:
      - medical
      - ward
      type: object
      properties:
        ward:
          $ref: "#/components/schemas/WardDTO"
        medical:
          $ref: "#/components/schemas/MedicalDTO"
      description: The medical ward's id
      example: 1
    PageLabWithRowsDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/LabWithRowsDTO"
        pageInfo:
          $ref: "#/components/schemas/PageInfoDTO"
    PagePatientExaminationDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PatientExaminationDTO"
        pageInfo:
          $ref: "#/components/schemas/PageInfoDTO"
    PageAdmissionDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AdmissionDTO"
        pageInfo:
          $ref: "#/components/schemas/PageInfoDTO"
    AdmittedPatientDTO:
      type: object
      properties:
        patient:
          $ref: "#/components/schemas/PatientDTO"
        admission:
          $ref: "#/components/schemas/AdmissionDTO"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
