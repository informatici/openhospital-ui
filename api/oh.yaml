swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
schemes: 
  - https
host: www.open-hospital.org
basePath: /oh-api
tags:
  - name: login-api
    description: Login Api
  - name: visits-controller
    description: Visits Controller
  - name: disease-type-controller
    description: Disease Type Controller
  - name: medical-stock-ward-controller
    description: Medical Stock Ward Controller
  - name: hospital-controller
    description: Hospital Controller
  - name: med-stock-movement-type-controller
    description: Med Stock Movement Type Controller
  - name: age-type-controller
    description: Age Type Controller
  - name: delivery-result-type-controller
    description: Delivery Result Type Controller
  - name: malnutrition-controller
    description: Malnutrition Controller
  - name: patient-controller
    description: Patient Controller
  - name: reports-controller
    description: Reports Controller
  - name: discharge-type-controller
    description: Discharge Type Controller
  - name: vaccine-type-controller
    description: Vaccine Type Controller
  - name: therapy-controller
    description: Therapy Controller
  - name: admission-controller
    description: Admission Controller
  - name: laboratory-controller
    description: Laboratory Controller
  - name: exam-type-controller
    description: Exam Type Controller
  - name: vaccine-controller
    description: Vaccine Controller
  - name: medical-controller
    description: Medical Controller
  - name: bill-controller
    description: Bill Controller
  - name: exam-row-controller
    description: Exam Row Controller
  - name: stock-movement-controller
    description: Stock Movement Controller
  - name: delivery-type-controller
    description: Delivery Type Controller
  - name: examination-controller
    description: Examination Controller
  - name: medical-type-controller
    description: Medical Type Controller
  - name: disease-controller
    description: Disease Controller
  - name: user-controller
    description: User Controller
  - name: admission-type-controller
    description: Admission Type Controller
  - name: supplier-controller
    description: Supplier Controller
  - name: sms-controller
    description: Sms Controller
  - name: ward-controller
    description: Ward Controller
  - name: exam-controller
    description: Exam Controller
paths:
  /admissions:
    get:
      tags:
        - admission-controller
      summary: getPatientAdmissions
      operationId: getPatientAdmissionsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patientcode
          in: query
          description: patientcode
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AdmissionDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - admission-controller
      summary: newAdmissions
      operationId: newAdmissionsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newAdmissionDTO
          description: newAdmissionDTO
          required: true
          schema:
            $ref: '#/definitions/AdmissionDTO'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - admission-controller
      summary: updateAdmissions
      operationId: updateAdmissionsUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: updAdmissionDTO
          description: updAdmissionDTO
          required: true
          schema:
            $ref: '#/definitions/AdmissionDTO'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admissions/admittedPatients:
    get:
      tags:
        - admission-controller
      summary: getAdmittedPatients
      operationId: getAdmittedPatientsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: searchterms
          in: query
          description: searchterms
          required: false
          type: string
        - name: admissionrange
          in: query
          description: admissionrange
          required: false
          type: string
        - name: dischargerange
          in: query
          description: dischargerange
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AdmittedPatientDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admissions/current:
    get:
      tags:
        - admission-controller
      summary: getCurrentAdmission
      operationId: getCurrentAdmissionUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patientcode
          in: query
          description: patientcode
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdmissionDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admissions/getBedsOccupationInWard:
    get:
      tags:
        - admission-controller
      summary: getUsedWardBed
      operationId: getUsedWardBedUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: wardid
          in: query
          description: wardid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admissions/getNextProgressiveIdInYear:
    get:
      tags:
        - admission-controller
      summary: getNextYProg
      operationId: getNextYProgUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: wardcode
          in: query
          description: wardcode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/admissions/{id}':
    get:
      tags:
        - admission-controller
      summary: getAdmissions
      operationId: getAdmissionsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdmissionDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - admission-controller
      summary: deleteAdmissionType
      operationId: deleteAdmissionTypeUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /admissiontypes:
    get:
      tags:
        - admission-type-controller
      summary: getAdmissionTypes
      operationId: getAdmissionTypesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AdmissionTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - admission-type-controller
      summary: newAdmissionType
      operationId: newAdmissionTypeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: admissionTypeDTO
          description: admissionTypeDTO
          required: true
          schema:
            $ref: '#/definitions/AdmissionTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - admission-type-controller
      summary: updateAdmissionTypet
      operationId: updateAdmissionTypetUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: admissionTypeDTO
          description: admissionTypeDTO
          required: true
          schema:
            $ref: '#/definitions/AdmissionTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/admissiontypes/{code}':
    delete:
      tags:
        - admission-type-controller
      summary: deleteAdmissionType
      operationId: deleteAdmissionTypeUsingDELETE_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /agetypes:
    get:
      tags:
        - age-type-controller
      summary: getAllAgeTypes
      operationId: getAllAgeTypesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AgeTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - age-type-controller
      summary: updateAgeType
      operationId: updateAgeTypeUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: ageTypeDTO
          description: ageTypeDTO
          required: true
          schema:
            $ref: '#/definitions/AgeTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AgeTypeDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /agetypes/code:
    get:
      tags:
        - age-type-controller
      summary: getAgeTypeCodeByAge
      operationId: getAgeTypeCodeByAgeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: age
          in: query
          description: age
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/agetypes/{index}':
    get:
      tags:
        - age-type-controller
      summary: getAgeTypeByIndex
      operationId: getAgeTypeByIndexUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: index
          in: path
          description: index
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AgeType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /auth/login:
    post:
      tags:
        - login-api
      summary: Login
      description: Login with the given credentials.
      operationId: loginUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: username
          in: query
          description: username
          required: true
          type: string
        - name: password
          in: query
          description: password
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Authentication'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /auth/logout:
    post:
      tags:
        - login-api
      summary: Logout
      description: Logout the current user.
      operationId: logoutUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /bills:
    get:
      tags:
        - bill-controller
      summary: searchBills
      operationId: searchBillsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: datefrom
          in: query
          description: datefrom
          required: true
          type: string
          format: date-time
        - name: dateto
          in: query
          description: dateto
          required: true
          type: string
          format: date-time
        - name: patient_code
          in: query
          description: patient_code
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - bill-controller
      summary: newBill
      operationId: newBillUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newBillDto
          description: newBillDto
          required: true
          schema:
            $ref: '#/definitions/FullBillDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FullBillDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /bills/items:
    get:
      tags:
        - bill-controller
      summary: getDistinctItems
      operationId: getDistinctItemsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillItemsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/bills/items/{bill_id}':
    get:
      tags:
        - bill-controller
      summary: getItems
      operationId: getItemsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: bill_id
          in: path
          description: bill_id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillItemsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /bills/payments:
    get:
      tags:
        - bill-controller
      summary: searchBillsPayments
      operationId: searchBillsPaymentsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: datefrom
          in: query
          description: datefrom
          required: true
          type: string
          format: date-time
        - name: dateto
          in: query
          description: dateto
          required: true
          type: string
          format: date-time
        - name: patient_code
          in: query
          description: patient_code
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillPaymentsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/bills/payments/{bill_id}':
    get:
      tags:
        - bill-controller
      summary: getPaymentsByBillId
      operationId: getPaymentsByBillIdUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: bill_id
          in: path
          description: bill_id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillPaymentsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /bills/pending:
    get:
      tags:
        - bill-controller
      summary: getPendingBills
      operationId: getPendingBillsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patient_code
          in: query
          description: patient_code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /bills/pending/affiliate:
    get:
      tags:
        - bill-controller
      summary: getPendingBillsAffiliate
      operationId: getPendingBillsAffiliateUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patient_code
          in: query
          description: patient_code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /bills/search/by/item:
    post:
      tags:
        - bill-controller
      summary: searchBills
      operationId: searchBillsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: datefrom
          in: query
          description: datefrom
          required: true
          type: string
          format: date-time
        - name: dateto
          in: query
          description: dateto
          required: true
          type: string
          format: date-time
        - in: body
          name: billItemDTO
          description: billItemDTO
          required: true
          schema:
            $ref: '#/definitions/BillItemsDTO'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /bills/search/by/payments:
    post:
      tags:
        - bill-controller
      summary: searchBillsByPayments
      operationId: searchBillsByPaymentsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: paymentsDTO
          description: paymentsDTO
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/BillPaymentsDTO'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/bills/{id}':
    get:
      tags:
        - bill-controller
      summary: getBill
      operationId: getBillUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BillDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - bill-controller
      summary: updateBill
      operationId: updateBillUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
        - in: body
          name: odBillDto
          description: odBillDto
          required: true
          schema:
            $ref: '#/definitions/FullBillDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FullBillDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - bill-controller
      summary: deleteBill
      operationId: deleteBillUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /deliveryresulttypes:
    get:
      tags:
        - delivery-result-type-controller
      summary: getDeliveryResultTypes
      operationId: getDeliveryResultTypesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DeliveryResultTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - delivery-result-type-controller
      summary: newDeliveryResultType
      operationId: newDeliveryResultTypeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: dlvrrestTypeDTO
          description: dlvrrestTypeDTO
          required: true
          schema:
            $ref: '#/definitions/DeliveryResultTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - delivery-result-type-controller
      summary: updateDeliveryResultTypet
      operationId: updateDeliveryResultTypetUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: dlvrrestTypeDTO
          description: dlvrrestTypeDTO
          required: true
          schema:
            $ref: '#/definitions/DeliveryResultTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/deliveryresulttypes/{code}':
    delete:
      tags:
        - delivery-result-type-controller
      summary: deleteDeliveryResultType
      operationId: deleteDeliveryResultTypeUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /deliverytypes:
    get:
      tags:
        - delivery-type-controller
      summary: getDeliveryTypes
      operationId: getDeliveryTypesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DeliveryTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - delivery-type-controller
      summary: newDeliveryType
      operationId: newDeliveryTypeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: dlvrTypeDTO
          description: dlvrTypeDTO
          required: true
          schema:
            $ref: '#/definitions/DeliveryTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - delivery-type-controller
      summary: updateDeliveryTypet
      operationId: updateDeliveryTypetUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: code
          description: dlvrTypeDTO
          required: true
          schema:
            $ref: '#/definitions/DeliveryTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/deliverytypes/{code}':
    delete:
      tags:
        - delivery-type-controller
      summary: deleteDeliveryType
      operationId: deleteDeliveryTypeUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /dischargetypes:
    get:
      tags:
        - discharge-type-controller
      summary: getDischargeTypes
      operationId: getDischargeTypesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DischargeTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - discharge-type-controller
      summary: newDischargeType
      operationId: newDischargeTypeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: dischTypeDTO
          description: dischTypeDTO
          required: true
          schema:
            $ref: '#/definitions/DischargeTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - discharge-type-controller
      summary: updateDischargeTypet
      operationId: updateDischargeTypetUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: dischTypeDTO
          description: dischTypeDTO
          required: true
          schema:
            $ref: '#/definitions/DischargeTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/dischargetypes/{code}':
    delete:
      tags:
        - discharge-type-controller
      summary: deleteDischargeType
      operationId: deleteDischargeTypeUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /diseases:
    post:
      tags:
        - disease-controller
      summary: newDisease
      operationId: newDiseaseUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: diseaseDTO
          description: diseaseDTO
          required: true
          schema:
            $ref: '#/definitions/DiseaseDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DiseaseDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - disease-controller
      summary: updateDisease
      operationId: updateDiseaseUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: diseaseDTO
          description: diseaseDTO
          required: true
          schema:
            $ref: '#/definitions/DiseaseDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DiseaseDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /diseases/all:
    get:
      tags:
        - disease-controller
      summary: getAllDiseases
      operationId: getAllDiseasesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /diseases/both:
    get:
      tags:
        - disease-controller
      summary: getDiseases
      operationId: getDiseasesUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/diseases/both/{typecode}':
    get:
      tags:
        - disease-controller
      summary: getDiseases
      operationId: getDiseasesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: typecode
          in: path
          description: typecode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /diseases/ipd/in:
    get:
      tags:
        - disease-controller
      summary: getDiseasesIpdIn
      operationId: getDiseasesIpdInUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/diseases/ipd/in/{typecode}':
    get:
      tags:
        - disease-controller
      summary: getDiseasesIpdInByCode
      operationId: getDiseasesIpdInByCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: typecode
          in: path
          description: typecode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /diseases/ipd/out:
    get:
      tags:
        - disease-controller
      summary: getDiseasesIpdOut
      operationId: getDiseasesIpdOutUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/diseases/ipd/out/{typecode}':
    get:
      tags:
        - disease-controller
      summary: getDiseasesIpdOutByCode
      operationId: getDiseasesIpdOutByCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: typecode
          in: path
          description: typecode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /diseases/opd:
    get:
      tags:
        - disease-controller
      summary: getDiseasesOpd
      operationId: getDiseasesOpdUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/diseases/opd/{typecode}':
    get:
      tags:
        - disease-controller
      summary: getDiseasesOpdByCode
      operationId: getDiseasesOpdByCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: typecode
          in: path
          description: typecode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/diseases/{code}':
    get:
      tags:
        - disease-controller
      summary: getDiseaseByCode
      operationId: getDiseaseByCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DiseaseDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - disease-controller
      summary: deleteDisease
      operationId: deleteDiseaseUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /diseasetypes:
    get:
      tags:
        - disease-type-controller
      summary: getAllDiseaseTypes
      operationId: getAllDiseaseTypesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - disease-type-controller
      summary: newDiseaseType
      operationId: newDiseaseTypeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: diseaseTypeDTO
          description: diseaseTypeDTO
          required: true
          schema:
            $ref: '#/definitions/DiseaseTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DiseaseTypeDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - disease-type-controller
      summary: updateDiseaseType
      operationId: updateDiseaseTypeUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: diseaseTypeDTO
          description: diseaseTypeDTO
          required: true
          schema:
            $ref: '#/definitions/DiseaseTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DiseaseTypeDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/diseasetypes/{code}':
    delete:
      tags:
        - disease-type-controller
      summary: deleteDiseaseType
      operationId: deleteDiseaseTypeUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /examinations:
    post:
      tags:
        - examination-controller
      summary: newPatientExamination
      operationId: newPatientExaminationUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newPatientExamination
          description: newPatientExamination
          required: true
          schema:
            $ref: '#/definitions/PatientExaminationDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/examinations/byPatientId/{patId}':
    get:
      tags:
        - examination-controller
      summary: getByPatientId
      operationId: getByPatientIdUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patId
          in: path
          description: patId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PatientExaminationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /examinations/defaultPatientExamination:
    get:
      tags:
        - examination-controller
      summary: getDefaultPatientExamination
      operationId: getDefaultPatientExaminationUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patId
          in: query
          description: patId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PatientExaminationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/examinations/fromLastPatientExamination/{id}':
    get:
      tags:
        - examination-controller
      summary: getFromLastPatientExamination
      operationId: getFromLastPatientExaminationUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PatientExaminationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/examinations/lastByPatientId/{patId}':
    get:
      tags:
        - examination-controller
      summary: getLastByPatientId
      operationId: getLastByPatientIdUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patId
          in: path
          description: patId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PatientExaminationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /examinations/lastNByPatId:
    get:
      tags:
        - examination-controller
      summary: getLastNByPatID
      operationId: getLastNByPatIDUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          description: limit
          required: true
          type: integer
          format: int32
        - name: patId
          in: query
          description: patId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PatientExaminationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/examinations/{id}':
    get:
      tags:
        - examination-controller
      summary: getByID
      operationId: getByIDUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PatientExaminationDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - examination-controller
      summary: updateExamination
      operationId: updateExaminationUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/PatientExaminationDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /examrows:
    get:
      tags:
        - exam-row-controller
      summary: getExamRows
      operationId: getExamRowsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ExamRowDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - exam-row-controller
      summary: newExamRow
      operationId: newExamRowUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: examRowDTO
          description: examRowDTO
          required: true
          schema:
            $ref: '#/definitions/ExamRowDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/examrows/byExamCode/{examCode}':
    get:
      tags:
        - exam-row-controller
      summary: getExamRowsByExamCode
      operationId: getExamRowsByExamCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: examCode
          in: path
          description: examCode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ExamRowDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /examrows/search:
    get:
      tags:
        - exam-row-controller
      summary: getExamRowsByCodeAndDescription
      operationId: getExamRowsByCodeAndDescriptionUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: query
          description: code
          required: true
          type: integer
          format: int32
        - name: description
          in: query
          description: description
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ExamRowDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/examrows/{code}':
    get:
      tags:
        - exam-row-controller
      summary: getExamRowsByCode
      operationId: getExamRowsByCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ExamRowDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - exam-row-controller
      summary: deleteExam
      operationId: deleteExamUsingDELETE_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /exams:
    get:
      tags:
        - exam-controller
      summary: getExams
      operationId: getExamsUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ExamDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - exam-controller
      summary: newExam
      operationId: newExamUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newExam
          description: newExam
          required: true
          schema:
            $ref: '#/definitions/ExamDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/exams/{code}':
    put:
      tags:
        - exam-controller
      summary: updateExams
      operationId: updateExamsUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
        - in: body
          name: updateExam
          description: updateExam
          required: true
          schema:
            $ref: '#/definitions/ExamDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - exam-controller
      summary: deleteExam
      operationId: deleteExamUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/exams/{description}':
    get:
      tags:
        - exam-controller
      summary: getExams
      operationId: getExamsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: description
          in: path
          description: description
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ExamDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /examtypes:
    get:
      tags:
        - exam-type-controller
      summary: getExamTypes
      operationId: getExamTypesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ExamTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - exam-type-controller
      summary: newExamType
      operationId: newExamTypeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newExamType
          description: newExamType
          required: true
          schema:
            $ref: '#/definitions/ExamTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/examtypes/{code}':
    put:
      tags:
        - exam-type-controller
      summary: updateExamType
      operationId: updateExamTypeUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
        - in: body
          name: updateExamType
          description: updateExamType
          required: true
          schema:
            $ref: '#/definitions/ExamTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - exam-type-controller
      summary: deleteExamType
      operationId: deleteExamTypeUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hospitals:
    get:
      tags:
        - hospital-controller
      summary: getHospital
      operationId: getHospitalUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HospitalDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /hospitals/currencyCode:
    get:
      tags:
        - hospital-controller
      summary: getHospitalCurrencyCode
      operationId: getHospitalCurrencyCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/hospitals/{code}':
    put:
      tags:
        - hospital-controller
      summary: updateHospital
      operationId: updateHospitalUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
        - in: body
          name: hospitalDTO
          description: hospitalDTO
          required: true
          schema:
            $ref: '#/definitions/HospitalDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /laboratories:
    get:
      tags:
        - laboratory-controller
      summary: getLaboratory
      operationId: getLaboratoryUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LaboratoryDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - laboratory-controller
      summary: newLaboratory
      operationId: newLaboratoryUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: labWithRowsDTO
          description: labWithRowsDTO
          required: true
          schema:
            $ref: '#/definitions/LabWithRowsDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/laboratories/byPatientId/{patId}':
    get:
      tags:
        - laboratory-controller
      summary: getLaboratory
      operationId: getLaboratoryUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patId
          in: path
          description: patId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LaboratoryDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /laboratories/exams:
    get:
      tags:
        - laboratory-controller
      summary: getLaboratoryForPrint
      operationId: getLaboratoryForPrintUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: examName
          in: query
          description: examName
          required: true
          type: string
        - name: dateFrom
          in: query
          description: dateFrom
          required: true
          type: string
          format: date-time
        - name: dateTo
          in: query
          description: dateTo
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LaboratoryForPrintDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /laboratories/insertList:
    post:
      tags:
        - laboratory-controller
      summary: newLaboratory2
      operationId: newLaboratory2UsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: labsWithRows
          description: labsWithRows
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/LabWithRowsDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /laboratories/materials:
    get:
      tags:
        - laboratory-controller
      summary: getMaterials
      operationId: getMaterialsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/laboratories/{code}':
    put:
      tags:
        - laboratory-controller
      summary: updateLaboratory
      operationId: updateLaboratoryUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
        - in: body
          name: labWithRowsDTO
          description: labWithRowsDTO
          required: true
          schema:
            $ref: '#/definitions/LabWithRowsDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - laboratory-controller
      summary: deleteExam
      operationId: deleteExamUsingDELETE_2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /malnutritions:
    post:
      tags:
        - malnutrition-controller
      summary: newMalnutrition
      operationId: newMalnutritionUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: malnutritionDTO
          description: malnutritionDTO
          required: true
          schema:
            $ref: '#/definitions/MalnutritionDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - malnutrition-controller
      summary: updateMalnutrition
      operationId: updateMalnutritionUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: malnutritionDTO
          description: malnutritionDTO
          required: true
          schema:
            $ref: '#/definitions/MalnutritionDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MalnutritionDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - malnutrition-controller
      summary: deleteMalnutrition
      operationId: deleteMalnutritionUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: malnutritionDTO
          description: malnutritionDTO
          required: true
          schema:
            $ref: '#/definitions/MalnutritionDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/malnutritions/last/{id_patient}':
    get:
      tags:
        - malnutrition-controller
      summary: getLastMalnutrition
      operationId: getLastMalnutritionUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id_patient
          in: path
          description: id_patient
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MalnutritionDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/malnutritions/{id_admission}':
    get:
      tags:
        - malnutrition-controller
      summary: getMalnutrition
      operationId: getMalnutritionUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id_admission
          in: path
          description: id_admission
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MalnutritionDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /medicals:
    get:
      tags:
        - medical-controller
      summary: getMedicals
      operationId: getMedicalsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sort_by
          in: query
          description: sort_by
          required: false
          type: string
          enum:
            - NONE
            - CODE
            - NAME
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MedicalDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - medical-controller
      summary: newMedical
      operationId: newMedicalUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: medicalDTO
          description: medicalDTO
          required: true
          schema:
            $ref: '#/definitions/MedicalDTO'
        - name: ignore_similar
          in: query
          description: ignore_similar
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - medical-controller
      summary: updateMedical
      operationId: updateMedicalUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: medicalDTO
          description: medicalDTO
          required: true
          schema:
            $ref: '#/definitions/MedicalDTO'
        - name: ignore_similar
          in: query
          description: ignore_similar
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /medicals/filter:
    get:
      tags:
        - medical-controller
      summary: filterMedicals
      operationId: filterMedicalsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: desc
          in: query
          description: desc
          required: false
          type: string
        - name: type
          in: query
          description: type
          required: false
          type: string
        - name: critical
          in: query
          description: critical
          required: false
          type: boolean
          default: false
        - name: name_sorted
          in: query
          description: name_sorted
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MedicalDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/medicals/{code}':
    get:
      tags:
        - medical-controller
      summary: getMedical
      operationId: getMedicalUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MedicalDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - medical-controller
      summary: deleteMedical
      operationId: deleteMedicalUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/medicalstockward/current/{ward_code}':
    get:
      tags:
        - medical-stock-ward-controller
      summary: getCurrentQuantityInWard
      operationId: getCurrentQuantityInWardUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ward_code
          in: path
          description: ward_code
          required: true
          type: string
        - name: med_id
          in: query
          description: med_id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /medicalstockward/movements:
    get:
      tags:
        - medical-stock-ward-controller
      summary: getMovementWard
      operationId: getMovementWardUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementWardDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - medical-stock-ward-controller
      summary: newMovementWard
      operationId: newMovementWardUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newMovementDTO
          description: newMovementDTO
          required: true
          schema:
            $ref: '#/definitions/MovementWardDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - medical-stock-ward-controller
      summary: updateMovementWard
      operationId: updateMovementWardUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: movementWardDTO
          description: movementWardDTO
          required: true
          schema:
            $ref: '#/definitions/MovementWardDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /medicalstockward/movements/all:
    post:
      tags:
        - medical-stock-ward-controller
      summary: newMovementWard
      operationId: newMovementWardUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newMovementDTOs
          description: newMovementDTOs
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementWardDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/medicalstockward/movements/to/{target_ward_code}':
    get:
      tags:
        - medical-stock-ward-controller
      summary: getWardMovementsToWard
      operationId: getWardMovementsToWardUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: target_ward_code
          in: path
          description: target_ward_code
          required: true
          type: string
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date-time
        - name: to
          in: query
          description: to
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementWardDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/medicalstockward/movements/{ward_code}':
    get:
      tags:
        - medical-stock-ward-controller
      summary: getMovementWard
      operationId: getMovementWardUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ward_code
          in: path
          description: ward_code
          required: true
          type: string
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date-time
        - name: to
          in: query
          description: to
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementWardDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/medicalstockward/{ward_code}':
    get:
      tags:
        - medical-stock-ward-controller
      summary: getMedicalsWard
      operationId: getMedicalsWardUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ward_code
          in: path
          description: ward_code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MedicalWardDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /medicaltypes:
    get:
      tags:
        - medical-type-controller
      summary: getMedicalTypes
      operationId: getMedicalTypesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MedicalTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - medical-type-controller
      summary: createMedicalType
      operationId: createMedicalTypeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: medicalTypeDTO
          description: medicalTypeDTO
          required: true
          schema:
            $ref: '#/definitions/MedicalTypeDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - medical-type-controller
      summary: updateMedicalType
      operationId: updateMedicalTypeUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: medicalTypeDTO
          description: medicalTypeDTO
          required: true
          schema:
            $ref: '#/definitions/MedicalTypeDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/medicaltypes/check/{code}':
    get:
      tags:
        - medical-type-controller
      summary: isCodeUsed
      operationId: isCodeUsedUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/medicaltypes/{code}':
    delete:
      tags:
        - medical-type-controller
      summary: deleteMedicalType
      operationId: deleteMedicalTypeUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /medstockmovementtype:
    get:
      tags:
        - med-stock-movement-type-controller
      summary: getMedicaldsrstockmovType
      operationId: getMedicaldsrstockmovTypeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - med-stock-movement-type-controller
      summary: newMedicaldsrstockmovType
      operationId: newMedicaldsrstockmovTypeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: medicaldsrstockmovType
          description: medicaldsrstockmovType
          required: true
          schema:
            $ref: '#/definitions/MovementTypeDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - med-stock-movement-type-controller
      summary: updateMedicaldsrstockmovType
      operationId: updateMedicaldsrstockmovTypeUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: medicaldsrstockmovTypeDTO
          description: medicaldsrstockmovTypeDTO
          required: true
          schema:
            $ref: '#/definitions/MovementTypeDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/medstockmovementtype/check/{code}':
    get:
      tags:
        - med-stock-movement-type-controller
      summary: isCodeUsed
      operationId: isCodeUsedUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/medstockmovementtype/{code}':
    get:
      tags:
        - med-stock-movement-type-controller
      summary: getMovementType
      operationId: getMovementTypeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MovementTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - med-stock-movement-type-controller
      summary: deleteMedicaldsrstockmovType
      operationId: deleteMedicaldsrstockmovTypeUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /patients:
    get:
      tags:
        - patient-controller
      summary: getPatients
      operationId: getPatientsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 80
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PatientDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - basicAuth: []
    post:
      tags:
        - patient-controller
      summary: newPatient
      operationId: newPatientUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newPatient
          description: newPatient
          required: true
          schema:
            $ref: '#/definitions/PatientDTO'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - basicAuth: []
  /patients/search:
    get:
      tags:
        - patient-controller
      summary: searchPatient
      operationId: searchPatientUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: firstName
          in: query
          description: firstName
          required: false
          type: string
        - name: secondName
          in: query
          description: secondName
          required: false
          type: string
        - name: birthDate
          in: query
          description: birthDate
          required: false
          type: string
        - name: address
          in: query
          description: address
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PatientDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - basicAuth: []
  '/patients/{code}':
    get:
      tags:
        - patient-controller
      summary: getPatient
      operationId: getPatientUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PatientDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - basicAuth: []
    put:
      tags:
        - patient-controller
      summary: updatePatient
      operationId: updatePatientUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
        - in: body
          name: updatePatient
          description: updatePatient
          required: true
          schema:
            $ref: '#/definitions/PatientDTO'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - basicAuth: []
    delete:
      tags:
        - patient-controller
      summary: deletePatient
      operationId: deletePatientUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - basicAuth: []
  /reports/diseases-list:
    get:
      tags:
        - reports-controller
      summary: printDiseasesListPdf
      operationId: printDiseasesListPdfUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /reports/exams-list:
    get:
      tags:
        - reports-controller
      summary: printExamsListPdf
      operationId: printExamsListPdfUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /sms:
    get:
      tags:
        - sms-controller
      summary: getAll
      operationId: getAllUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dateFrom
          in: query
          description: dateFrom
          required: true
          type: string
        - name: dateTo
          in: query
          description: dateTo
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SmsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - sms-controller
      summary: saveSms
      operationId: saveSmsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: smsDTO
          description: smsDTO
          required: true
          schema:
            $ref: '#/definitions/SmsDTO'
        - name: split
          in: query
          description: split
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /sms/delete:
    post:
      tags:
        - sms-controller
      summary: deleteSms
      operationId: deleteSmsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: smsDTOList
          description: smsDTOList
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SmsDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /stockmovements:
    get:
      tags:
        - stock-movement-controller
      summary: getMovements
      operationId: getMovementsUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /stockmovements/charge:
    post:
      tags:
        - stock-movement-controller
      summary: newMultipleChargingMovements
      operationId: newMultipleChargingMovementsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: movementDTOs
          description: movementDTOs
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementDTO'
        - name: ref
          in: query
          description: ref
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /stockmovements/critical/check:
    get:
      tags:
        - stock-movement-controller
      summary: alertCriticalQuantity
      operationId: alertCriticalQuantityUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: med_code
          in: query
          description: med_code
          required: true
          type: integer
          format: int32
        - name: qty
          in: query
          description: qty
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /stockmovements/discharge:
    post:
      tags:
        - stock-movement-controller
      summary: newMultipleDischargingMovements
      operationId: newMultipleDischargingMovementsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: movementDTOs
          description: movementDTOs
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementDTO'
        - name: ref
          in: query
          description: ref
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /stockmovements/filter/v1:
    get:
      tags:
        - stock-movement-controller
      summary: getMovements
      operationId: getMovementsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ward_id
          in: query
          description: ward_id
          required: true
          type: string
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date-time
        - name: to
          in: query
          description: to
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /stockmovements/filter/v2:
    get:
      tags:
        - stock-movement-controller
      summary: getMovements
      operationId: getMovementsUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: med_code
          in: query
          description: med_code
          required: false
          type: integer
          format: int32
        - name: med_type
          in: query
          description: med_type
          required: false
          type: string
        - name: ward_id
          in: query
          description: ward_id
          required: false
          type: string
        - name: mov_type
          in: query
          description: mov_type
          required: false
          type: string
        - name: mov_from
          in: query
          description: mov_from
          required: false
          type: string
          format: date-time
        - name: mov_to
          in: query
          description: mov_to
          required: false
          type: string
          format: date-time
        - name: lot_prep_from
          in: query
          description: lot_prep_from
          required: false
          type: string
          format: date-time
        - name: lot_prep_to
          in: query
          description: lot_prep_to
          required: false
          type: string
          format: date-time
        - name: lot_due_from
          in: query
          description: lot_due_from
          required: false
          type: string
          format: date-time
        - name: lot_due_to
          in: query
          description: lot_due_to
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/stockmovements/lot/{med_code}':
    get:
      tags:
        - stock-movement-controller
      summary: getLotByMedical
      operationId: getLotByMedicalUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: med_code
          in: path
          description: med_code
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LotDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/stockmovements/{ref}':
    get:
      tags:
        - stock-movement-controller
      summary: getMovements
      operationId: getMovementsUsingGET_2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ref
          in: path
          description: ref
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MovementDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /suppliers:
    get:
      tags:
        - supplier-controller
      summary: getSuppliers
      operationId: getSuppliersUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: exclude_deleted
          in: query
          description: exclude_deleted
          required: false
          type: boolean
          default: true
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SupplierDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - supplier-controller
      summary: saveSupplier
      operationId: saveSupplierUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: suplierDTO
          description: suplierDTO
          required: true
          schema:
            $ref: '#/definitions/SupplierDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - supplier-controller
      summary: updateSupplier
      operationId: updateSupplierUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: suplierDTO
          description: suplierDTO
          required: true
          schema:
            $ref: '#/definitions/SupplierDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/suppliers/{id}':
    get:
      tags:
        - supplier-controller
      summary: getSuppliers
      operationId: getSuppliersUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupplierDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /therapies:
    post:
      tags:
        - therapy-controller
      summary: newTherapy
      operationId: newTherapyUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: thRowDTO
          description: thRowDTO
          required: true
          schema:
            $ref: '#/definitions/TherapyRowDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TherapyRowDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /therapies/from-row:
    post:
      tags:
        - therapy-controller
      summary: getTherapy
      operationId: getTherapyUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: thRowDTO
          description: thRowDTO
          required: true
          schema:
            $ref: '#/definitions/TherapyRowDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TherapyDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /therapies/from-rows:
    post:
      tags:
        - therapy-controller
      summary: getTherapies
      operationId: getTherapiesUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: thRowDTOs
          description: thRowDTOs
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TherapyRowDTO'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TherapyDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /therapies/meds-out-of-stock:
    post:
      tags:
        - therapy-controller
      summary: getMedicalsOutOfStock
      operationId: getMedicalsOutOfStockUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: therapyDTOs
          description: therapyDTOs
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TherapyDTO'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MedicalDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /therapies/replace:
    post:
      tags:
        - therapy-controller
      summary: replaceTherapies
      operationId: replaceTherapiesUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: thRowDTOs
          description: thRowDTOs
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TherapyRowDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/therapies/{code_patient}':
    get:
      tags:
        - therapy-controller
      summary: getTherapyRows
      operationId: getTherapyRowsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code_patient
          in: path
          description: code_patient
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TherapyRowDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - therapy-controller
      summary: deleteAllTherapies
      operationId: deleteAllTherapiesUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code_patient
          in: path
          description: code_patient
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /users:
    get:
      tags:
        - user-controller
      summary: getUser
      operationId: getUserUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: group_id
          in: query
          description: group_id
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-controller
      summary: newUser
      operationId: newUserUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: userDTO
          description: userDTO
          required: true
          schema:
            $ref: '#/definitions/UserDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - user-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: userDTO
          description: userDTO
          required: true
          schema:
            $ref: '#/definitions/UserDTO'
        - name: password
          in: query
          description: password
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/group-menus/{group_code}':
    get:
      tags:
        - user-controller
      summary: getGroupMenu
      operationId: getGroupMenuUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: group_code
          in: path
          description: group_code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserMenuItemDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /users/groups:
    get:
      tags:
        - user-controller
      summary: getUserGroup
      operationId: getUserGroupUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserGroupDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-controller
      summary: newUserGroup
      operationId: newUserGroupUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: aGroup
          description: aGroup
          required: true
          schema:
            $ref: '#/definitions/UserGroupDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - user-controller
      summary: updateUserGroup
      operationId: updateUserGroupUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: aGroup
          description: aGroup
          required: true
          schema:
            $ref: '#/definitions/UserGroupDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/groups/{group_code}':
    post:
      tags:
        - user-controller
      summary: setGroupMenu
      operationId: setGroupMenuUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: group_code
          in: path
          description: group_code
          required: true
          type: string
        - in: body
          name: menusDTO
          description: menusDTO
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/UserMenuItemDTO'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - user-controller
      summary: deleteGroup
      operationId: deleteGroupUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: group_code
          in: path
          description: group_code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/users/menus/{username}':
    get:
      tags:
        - user-controller
      summary: getMenu
      operationId: getMenuUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: username
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserMenuItemDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/users/{username}':
    get:
      tags:
        - user-controller
      summary: getUserByName
      operationId: getUserByNameUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: username
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: username
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /vaccines:
    get:
      tags:
        - vaccine-controller
      summary: getVaccines
      operationId: getVaccinesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VaccineDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - vaccine-controller
      summary: newVaccine
      operationId: newVaccineUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newVaccine
          description: newVaccine
          required: true
          schema:
            $ref: '#/definitions/VaccineDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - vaccine-controller
      summary: updateVaccine
      operationId: updateVaccineUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: updateVaccine
          description: updateVaccine
          required: true
          schema:
            $ref: '#/definitions/VaccineDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/vaccines/check/{code}':
    get:
      tags:
        - vaccine-controller
      summary: checkVaccineCode
      operationId: checkVaccineCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/vaccines/{code}':
    delete:
      tags:
        - vaccine-controller
      summary: deleteVaccine
      operationId: deleteVaccineUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/vaccines/{vaccineTypeCode}':
    get:
      tags:
        - vaccine-controller
      summary: getVaccinesByVaccineTypeCode
      operationId: getVaccinesByVaccineTypeCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: vaccineTypeCode
          in: path
          description: vaccineTypeCode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VaccineDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vaccinetype:
    get:
      tags:
        - vaccine-type-controller
      summary: getVaccineType
      operationId: getVaccineTypeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VaccineTypeDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - vaccine-type-controller
      summary: newVaccineType
      operationId: newVaccineTypeUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newVaccineType
          description: newVaccineType
          required: true
          schema:
            $ref: '#/definitions/VaccineTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - vaccine-type-controller
      summary: updateVaccineType
      operationId: updateVaccineTypeUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: updateVaccineType
          description: updateVaccineType
          required: true
          schema:
            $ref: '#/definitions/VaccineTypeDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/vaccinetype/check/{code}':
    get:
      tags:
        - vaccine-type-controller
      summary: checkVaccineTypeCode
      operationId: checkVaccineTypeCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/vaccinetype/{code}':
    delete:
      tags:
        - vaccine-type-controller
      summary: deleteVaccineType
      operationId: deleteVaccineTypeUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /visit:
    post:
      tags:
        - visits-controller
      summary: newVisit
      operationId: newVisitUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newVisit
          description: newVisit
          required: true
          schema:
            $ref: '#/definitions/VisitDTO'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/visit/{patID}':
    get:
      tags:
        - visits-controller
      summary: getVisit
      operationId: getVisitUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patID
          in: path
          description: patID
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VisitDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - visits-controller
      summary: deleteVisitsRelatedToPatient
      operationId: deleteVisitsRelatedToPatientUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: patID
          in: path
          description: patID
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /visits:
    post:
      tags:
        - visits-controller
      summary: newVisits
      operationId: newVisitsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newVisits
          description: newVisits
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/VisitDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /wards:
    get:
      tags:
        - ward-controller
      summary: getWards
      operationId: getWardsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/WardDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - ward-controller
      summary: newWard
      operationId: newWardUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newWard
          description: newWard
          required: true
          schema:
            $ref: '#/definitions/WardDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - ward-controller
      summary: updateWard
      operationId: updateWardUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: updateWard
          description: updateWard
          required: true
          schema:
            $ref: '#/definitions/WardDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/wards/check/{code}':
    get:
      tags:
        - ward-controller
      summary: checkWardCode
      operationId: checkWardCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/wards/check/{createIfNotExist}':
    get:
      tags:
        - ward-controller
      summary: checkWardMaternityCode
      operationId: checkWardMaternityCodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: createIfNotExist
          in: path
          description: createIfNotExist
          required: true
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/wards/occupation/{code}':
    get:
      tags:
        - ward-controller
      summary: getCurrentOccupation
      operationId: getCurrentOccupationUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/wards/{code}':
    delete:
      tags:
        - ward-controller
      summary: deleteWard
      operationId: deleteWardUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /wardsNoMaternity:
    get:
      tags:
        - ward-controller
      summary: getWardsNoMaternity
      operationId: getWardsNoMaternityUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/WardDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
securityDefinitions:
  basicAuth:
    type: basic
definitions:
  Locale:
    type: object
  DeliveryResultTypeDTO:
    type: object
    properties:
      code:
        type: string
        example: M
        description: code of the delivery result type
      description:
        type: string
        example: MORTALITÉ MATERNELLE
        description: description of the delivery result type
  AgeTypeDTO:
    type: object
    properties:
      code:
        type: string
        description: Age type code
      description:
        type: string
        description: Age type description
      from:
        type: integer
        format: int32
        example: 0
        description: The minimum value of the range
      to:
        type: integer
        format: int32
        example: 0
        description: The maximum value of the range
    description: Class representing an age type which is typically a range
  DeliveryTypeDTO:
    type: object
    properties:
      code:
        type: string
        example: 'N'
        description: code of the delivery type
      description:
        type: string
        example: ACCOUCHEMENT NORMAL
        description: description of the delivery type
  UserDTO:
    type: object
    properties:
      userName:
        type: string
        example: John Doe
        description: the username (must be unique)
      userGroupName:
        description: the user's group
        $ref: '#/definitions/UserGroupDTO'
      passwd:
        type: string
        example: 21@U2g423
        description: the user's password
      desc:
        type: string
        example: Lab chief technician
        description: the user's description
  FullBillDTO:
    type: object
    properties:
      billDTO:
        $ref: '#/definitions/BillDTO'
      billItemsDTO:
        type: array
        items:
          $ref: '#/definitions/BillItemsDTO'
      billPaymentsDTO:
        type: array
        items:
          $ref: '#/definitions/BillPaymentsDTO'
  DischargeTypeDTO:
    type: object
    properties:
      code:
        type: string
        example: SN
        description: code of the discharge type
      description:
        type: string
        example: SORTIE NORMALE
        description: description of the discharge type
  BillDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
      list:
        type: boolean
      listId:
        type: integer
        format: int32
      patient:
        type: boolean
      patientDTO:
        $ref: '#/definitions/PatientDTO'
      date:
        type: string
        format: date-time
        example: '2020-03-19T14:58:00.000Z'
        description: Date of bill creation
      update:
        type: string
        format: date-time
        example: '2020-03-19T14:58:00.000Z'
        description: Date of bill updated
      listName:
        type: string
        example: Basic
        description: Price list name
      patName:
        type: string
        example: Mario Rossi
        description: patient name
      status:
        type: string
        example: O
        description: Bill status
      amount:
        type: number
        format: double
        example: 1000
        description: Bill Amount
      balance:
        type: number
        format: double
        example: 1500
        description: Bill balance
      user:
        type: string
        example: admin
        description: user name who create the bill
    description: Class representing a bill
  WardDTO:
    type: object
    properties:
      beds:
        type: integer
        format: int32
      code:
        type: string
      description:
        type: string
      docs:
        type: integer
        format: int32
      email:
        type: string
      fax:
        type: string
      female:
        type: boolean
      lock:
        type: integer
        format: int32
      male:
        type: boolean
      nurs:
        type: integer
        format: int32
      pharmacy:
        type: boolean
      telephone:
        type: string
  PatientExaminationDTO:
    type: object
    properties:
      pex_ID:
        type: integer
        format: int32
        example: 1
        description: Patient Examination Id
      pex_date:
        type: string
        format: date
        example: '2020-03-19T14:58:00.000Z'
        description: Date of Patient Examination
      patientCode:
        type: integer
        format: int32
        description: Patient Examination Code
      pex_height:
        type: integer
        format: int32
        description: Patient Height in cm
      pex_weight:
        type: number
        format: double
        description: Patient Weight in Kg
      pex_pa_min:
        type: integer
        format: int32
        description: Blood Pressure MIN in mmHg
      pex_pa_max:
        type: integer
        format: int32
        description: Blood Pressure MAX in mmHg
      pex_fc:
        type: integer
        format: int32
        description: Heart Rate in APm
      pex_temp:
        type: number
        format: double
        description: Patient Temperature in °C
      pex_sat:
        type: number
        format: double
        description: Patient Saturation in %
      pex_note:
        type: string
        description: Examination Note
  BillPaymentsDTO:
    type: object
    properties:
      hashCode:
        type: integer
        format: int32
      id:
        type: integer
        format: int32
      billId:
        type: integer
        format: int32
        description: Bill id
      date:
        type: string
        format: date-time
        example: '2020-03-19T14:58:00.000Z'
        description: date of payment
      amount:
        type: number
        format: double
        example: 500
        description: the payment amount
      user:
        type: string
        example: admin
        description: the current user
    description: Class representing a billPayment
  GrantedAuthority:
    type: object
    properties:
      authority:
        type: string
  Resource:
    type: object
    properties:
      description:
        type: string
      file:
        type: file
      filename:
        type: string
      inputStream:
        $ref: '#/definitions/InputStream'
      open:
        type: boolean
      readable:
        type: boolean
      uri:
        $ref: '#/definitions/URI'
      url:
        $ref: '#/definitions/URL'
  GregorianCalendar:
    type: object
    properties:
      calendarType:
        type: string
      fieldsComputed:
        type: integer
        format: int32
      fieldsNormalized:
        type: integer
        format: int32
      firstDayOfWeek:
        type: integer
        format: int32
      gregorianChange:
        type: string
        format: date-time
      lenient:
        type: boolean
      minimalDaysInFirstWeek:
        type: integer
        format: int32
      time:
        type: string
        format: date-time
      timeInMillis:
        type: integer
        format: int64
      timeZone:
        $ref: '#/definitions/TimeZone'
      weekCountData:
        $ref: '#/definitions/Locale'
      weekDateSupported:
        type: boolean
      weekYear:
        type: integer
        format: int32
      weeksInWeekYear:
        type: integer
        format: int32
      zoneShared:
        type: boolean
  VaccineDTO:
    type: object
    properties:
      code:
        type: string
        example: '1'
        description: Code of the vaccine
      description:
        type: string
        example: BCG
        description: Description of the vaccine
      vaccineType:
        description: Type of the vaccine
        $ref: '#/definitions/VaccineTypeDTO'
    description: Class representing a vaccine
  LaboratoryDTO:
    type: object
    properties:
      date:
        type: string
        format: date-time
      lock:
        type: integer
        format: int32
      code:
        type: integer
        format: int32
        description: Laboratory Code
      material:
        type: string
        description: Laboratory Material
      exam:
        description: Laboratory Exam
        $ref: '#/definitions/ExamDTO'
      examDate:
        type: string
        format: date-time
        description: Laboratory Exam Date
      result:
        type: string
        description: Laboratory Result
      note:
        type: string
        description: Laboratory Note
      patientCode:
        type: integer
        format: int32
        description: Laboratory Patient Code
      patName:
        type: string
        description: Laboratory Patient Name
      inOutPatient:
        type: string
        example: '0'
        description: Laboratory Patient InOut
      age:
        type: integer
        format: int32
        description: Laboratory Patient Age
      sex:
        type: string
        example: M
        description: Laboratory Patient Sex
  MedicalWardIdDTO:
    type: object
    properties:
      ward:
        description: The ward
        $ref: '#/definitions/WardDTO'
      medical:
        description: The medical
        $ref: '#/definitions/MedicalDTO'
  SmsDTO:
    type: object
    properties:
      smsId:
        type: integer
        format: int32
        example: 1
        description: SMS Id
      smsDate:
        type: string
        format: date-time
        example: '2020-07-16'
        description: SMS Date
      smsDateSched:
        type: string
        format: date-time
        example: '2020-07-28'
        description: SMS scheduled date
      smsNumber:
        type: string
        example: '+237671302313'
        description: SMS target phone number
      smsText:
        type: string
        example: Hi Mario!
        description: SMS content text
      smsDateSent:
        type: string
        format: date-time
        example: '2020-07-28'
        description: SMS sent date
      smsUser:
        type: string
        example: Rosi
        description: SMS user
      module:
        type: string
        example: OPD
        description: SMS module name
      moduleID:
        type: string
        description: SMS module Id
  TimeZone:
    type: object
    properties:
      displayName:
        type: string
      dstsavings:
        type: integer
        format: int32
      id:
        type: string
      rawOffset:
        type: integer
        format: int32
  MedicalWardDTO:
    type: object
    properties:
      id:
        example: '1'
        description: The medical ward's id
        $ref: '#/definitions/MedicalWardIdDTO'
      in_quantity:
        type: number
        format: float
        example: 150
        description: The in-quantity
      out_quantity:
        type: number
        format: float
        example: 89
        description: The out-quantity
  ExamTypeDTO:
    type: object
    properties:
      code:
        type: string
        example: HB
        description: Exam Type Code
      description:
        type: string
        example: 1.Haematology
        description: Exam Type Description
  MovementDTO:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 1
        description: The movement code
      medical:
        description: The related medical
        $ref: '#/definitions/MedicalDTO'
      type:
        description: The movement type
        $ref: '#/definitions/MovementTypeDTO'
      ward:
        description: The target ward
        $ref: '#/definitions/WardDTO'
      lot:
        description: The lot
        $ref: '#/definitions/LotDTO'
      date:
        type: string
        format: date-time
        example: '2020-06-24'
        description: The movement date
      quantity:
        type: integer
        format: int32
        example: 50
        description: The movement's medical quantity
      supplier:
        description: The movement's supplier
        $ref: '#/definitions/SupplierDTO'
      refNo:
        type: string
        example: MVN152445
        description: The movement reference
  UserMenuItemDTO:
    type: object
    properties:
      asubMenu:
        type: boolean
      code:
        type: string
        example: admtype
        description: code of the menu item (must be unique)
      buttonLabel:
        type: string
        example: Admission Type
        description: button label of the menu item
      altLabel:
        type: string
        example: Admission Type
        description: alt label of the menu item
      tooltip:
        type: string
        example: Admission Type
        description: tooltip label of the menu item
      shortcut:
        type: string
        example: A
        description: shortcut of the menu item
      mySubmenu:
        type: string
        example: types
        description: parent submenu of the menu item
      myClass:
        type: string
        example: org.isf.admtype.gui.AdmissionTypeBrowser
        description: the main window class associated
      position:
        type: integer
        format: int32
        example: 5
        description: position of the menu item
  MovementTypeDTO:
    type: object
    properties:
      code:
        type: string
        example: D
        description: Code of the movement type
      description:
        type: string
        example: Damage
        description: Description of the movement type
      type:
        type: string
        example: '-'
        description: Type of the movement type
  ExamRowDTO:
    type: object
    properties:
      exam:
        $ref: '#/definitions/ExamDTO'
      code:
        type: integer
        format: int32
        example: 999
        description: Exam Row Code
      description:
        type: string
        example: NEGATIVE
        description: Exam Row Code
  LaboratoryForPrintDTO:
    type: object
    properties:
      code:
        type: integer
        format: int32
      date:
        type: string
      exam:
        type: string
      result:
        type: string
  File:
    type: object
    properties:
      absolute:
        type: boolean
      absoluteFile:
        type: file
      absolutePath:
        type: string
      canonicalFile:
        type: file
      canonicalPath:
        type: string
      directory:
        type: boolean
      file:
        type: boolean
      freeSpace:
        type: integer
        format: int64
      hidden:
        type: boolean
      name:
        type: string
      parent:
        type: string
      parentFile:
        type: file
      path:
        type: string
      totalSpace:
        type: integer
        format: int64
      usableSpace:
        type: integer
        format: int64
  DiseaseTypeDTO:
    type: object
    properties:
      code:
        type: string
        description: Disease type code
      description:
        type: string
        description: Disease type description
    description: Class representing a disease type
  AdmittedPatientDTO:
    type: object
    properties:
      admission:
        $ref: '#/definitions/AdmissionDTO'
      patient:
        $ref: '#/definitions/PatientDTO'
  OperationTypeDTO:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
  PregnantTreatmentTypeDTO:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
  MalnutritionDTO:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 1
        description: The code malnutrition control
      dateSupp:
        type: string
        format: date-time
        example: '1979-05-01'
        description: The date of this malnutrition control
      dateConf:
        type: string
        format: date-time
        example: '1979-05-01'
        description: The date of the next malnutrition control
      admission:
        description: The admission requesting the control
        $ref: '#/definitions/AdmissionDTO'
      height:
        type: number
        format: float
        example: 165
        description: The height of the patient
      weight:
        type: number
        format: float
        example: 65
        description: The weight of the patient
  Collection«GrantedAuthority»:
    type: object
  BillItemsDTO:
    type: object
    properties:
      hashCode:
        type: integer
        format: int32
      id:
        type: integer
        format: int32
      price:
        type: boolean
      billId:
        type: integer
        format: int32
        description: Bill id
      priceId:
        type: string
        example: '104'
        description: The price Id
      itemDescription:
        type: string
        example: Acetone 99 % 1ltr
        description: item description
      itemAmount:
        type: number
        format: double
        example: 1000
        description: item amount
      itemQuantity:
        type: integer
        format: int32
        example: 1
        description: item quantity
      itemDisplayCode:
        type: string
        example: Acetone
        description: item display code
      itemId:
        type: string
        example: '3'
        description: item id
    description: Class representing a billItem
  LabWithRowsDTO:
    type: object
    properties:
      laboratoryDTO:
        $ref: '#/definitions/LaboratoryDTO'
      laboratoryRowList:
        type: array
        items:
          type: string
  URI:
    type: object
    properties:
      absolute:
        type: boolean
      authority:
        type: string
      fragment:
        type: string
      host:
        type: string
      opaque:
        type: boolean
      path:
        type: string
      port:
        type: integer
        format: int32
      query:
        type: string
      rawAuthority:
        type: string
      rawFragment:
        type: string
      rawPath:
        type: string
      rawQuery:
        type: string
      rawSchemeSpecificPart:
        type: string
      rawUserInfo:
        type: string
      scheme:
        type: string
      schemeSpecificPart:
        type: string
      userInfo:
        type: string
  URL:
    type: object
    properties:
      authority:
        type: string
      content:
        type: object
      defaultPort:
        type: integer
        format: int32
      file:
        type: string
      host:
        type: string
      path:
        type: string
      port:
        type: integer
        format: int32
      protocol:
        type: string
      query:
        type: string
      ref:
        type: string
      userInfo:
        type: string
  PatientDTO:
    type: object
    properties:
      firstName:
        type: string
        example: Mario
        description: First name of the patient
      secondName:
        type: string
        example: Rossi
        description: Last name of the patient
      birthDate:
        type: string
        format: date-time
        example: '1979-05-01'
        description: Birth date
      age:
        type: integer
        format: int32
        example: 40
        description: Age
      agetype:
        type: string
        example: 'null'
        description: Age type
      sex:
        type: string
        example: M
        description: Sex
        enum:
          - F
          - M
      address:
        type: string
        example: 'Via Roma, 12'
        description: Address
      city:
        type: string
        example: Verona
        description: City
      telephone:
        type: string
        example: '+393456789012'
        description: Telephone
      note:
        type: string
        example: Test insert new patient
        description: Note
      mother_name:
        type: string
        example: Roberta
        description: Mother's name
      mother:
        type: string
        example: A
        description: 'Mother''s status (D=dead, A=alive)'
        enum:
          - D
          - A
      father_name:
        type: string
        example: Giuseppe
        description: Father's name
      father:
        type: string
        example: D
        description: 'Father''s status (D=dead, A=alive)'
        enum:
          - D
          - A
      bloodType:
        type: string
        example: A+
        description: 'Blood type (0-/+, A-/+ , B-/+, AB-/+)'
        # enum:
        #   - "0-"
        #   - "0+"
        #   - "A-"
        #   - "A+"
        #   - "B-"
        #   - "B+"
        #   - "AB-"
        #   - "AB+"
      hasInsurance:
        type: string
        example: 'N'
        description: 'hasInsurance (Y=Yes, N=no)'
        enum:
          - 'Y'
          - 'N'
      parentTogether:
        type: string
        example: 'N'
        description: 'Parent together (Y=Yes, N=no)'
        enum:
          - 'Y'
          - 'N'
      taxCode:
        type: string
        example: RSSMRA79E01L781N
        description: Tax code
      height:
        type: number
        format: float
        example: 174
        description: Height
      weight:
        type: number
        format: float
        example: 73
        description: Weight
      blobPhoto:
        type: array
        example: 
        description: BlobPhoto
        items:
          type: string
          format: byte
    description: Class representing a patient
  TherapyRowDTO:
    type: object
    properties:
      therapyID:
        type: integer
        format: int32
        example: 1
        description: The therapy's ID
      patID:
        description: The patient
        $ref: '#/definitions/PatientDTO'
      startDate:
        type: string
        format: date-time
        example: '2020-07-16'
        description: The start date of therapy
      endDate:
        type: string
        format: date-time
        example: '2020-07-30'
        description: The end date of the therapy
      medicalId:
        type: integer
        format: int32
        example: 1
        description: The ID of the medical concerned by the therapy
      qty:
        type: number
        format: double
        example: 48
        description: The quantity of medicals
      unitID:
        type: integer
        format: int32
        example: 1
        description: The unit's ID
      freqInDay:
        type: integer
        format: int32
        example: 2
        description: The frequence in day
      freqInPeriod:
        type: integer
        format: int32
        example: 1
        description: The frequence in period
      note:
        type: string
        example: Sample note
        description: A note for the therapy
      notifyInt:
        type: integer
        format: int32
        example: 0
        description: 'the notify flag: 1 if the notification need to be activated, 0 otherwise'
      smsInt:
        type: integer
        format: int32
        example: 0
        description: 'the sms flag: 1 if sms need to be sent to patient, 0 otherwise'
  MovementWardDTO:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 1
        description: The movement ward's code
      ward:
        description: The ward
        $ref: '#/definitions/WardDTO'
      date:
        type: string
        format: date-time
        example: '2020-06-07'
        description: The movement ward's date
      patient:
        description: The patient in case the movement is associated to a patient
        $ref: '#/definitions/PatientDTO'
      age:
        type: integer
        format: int32
        example: 21
        description: The patient's age in case the movement is associated to a patient
      weight:
        type: number
        format: float
        example: 75
        description: The patient's weight in case the movement is associated to a patient
      description:
        type: string
        example: stock transfer from pharmacy to laboratory
        description: The description of the movement
      medical:
        description: The medical concerned by the movement
        $ref: '#/definitions/MedicalDTO'
      quantity:
        type: number
        format: double
        example: 145
        description: The quantity of the medical concerned by the movement
      units:
        type: string
        example: pct
        description: The mesure's unit of the medical concerned by the movement
      wardTo:
        description: The ward to which the movement is done
        $ref: '#/definitions/WardDTO'
      wardFrom:
        description: The ward from which the movement is done
        $ref: '#/definitions/WardDTO'
  AgeType:
    type: object
    properties:
      active:
        type: integer
        format: int32
      code:
        type: string
      createdBy:
        type: string
      createdDate:
        type: string
        format: date-time
      description:
        type: string
      from:
        type: integer
        format: int32
      lastModifiedBy:
        type: string
      lastModifiedDate:
        type: string
        format: date-time
      to:
        type: integer
        format: int32
  UserGroupDTO:
    type: object
    properties:
      code:
        type: string
        example: labo
        description: name of the group (must be unique)
      desc:
        type: string
        example: Staff members working in the laboratory
        description: the description of the group
  MedicalDTO:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 1
        description: The id of the medical
      prod_code:
        type: string
        example: PARA
        description: The product code
      type:
        description: The medical type
        $ref: '#/definitions/MedicalTypeDTO'
      description:
        type: string
        example: Paracétamol
        description: The description of the medical
      initialqty:
        type: number
        format: double
        example: 21
        description: The initial quantity of the medical
      pcsperpck:
        type: integer
        format: int32
        example: 100
        description: The number of pieces per packet
      inqty:
        type: number
        format: double
        example: 340
        description: The input quantity of the medical
      outqty:
        type: number
        format: double
        example: 8
        description: The out quantity of the medical
      minqty:
        type: number
        format: double
        example: 15
        description: The min quantity of the medical
  MedicalTypeDTO:
    type: object
    properties:
      code:
        type: string
        example: M
        description: Code of the medical type
      description:
        type: string
        example: Medical material
        description: Description of the medical type
  AdmissionDTO:
    type: object
    properties:
      abortDate:
        type: string
        format: date-time
      ctrlDate1:
        type: string
        format: date-time
      ctrlDate2:
        type: string
        format: date-time
      fhu:
        type: string
      id:
        type: integer
        format: int32
        example: 12
        description: admission key
      admitted:
        type: integer
        format: int32
        example: 0
        description: if admitted or not
      type:
        type: string
        example: 'N'
        description: type of admission
      ward:
        description: ward
        $ref: '#/definitions/WardDTO'
      yProg:
        type: integer
        format: int32
        example: 1
        description: a progr. in year for each ward
      patient:
        description: patient
        $ref: '#/definitions/PatientDTO'
      admDate:
        type: string
        format: date-time
        description: admission date
      admType:
        description: admission type
        $ref: '#/definitions/AdmissionTypeDTO'
      diseaseIn:
        description: 'disease in '
        $ref: '#/definitions/DiseaseDTO'
      diseaseOut1:
        description: 'disease out '
        $ref: '#/definitions/DiseaseDTO'
      diseaseOut2:
        description: 'disease out '
        $ref: '#/definitions/DiseaseDTO'
      diseaseOut3:
        description: 'disease out '
        $ref: '#/definitions/DiseaseDTO'
      operation:
        description: 'operation '
        $ref: '#/definitions/OperationDTO'
      opDate:
        type: string
        format: date-time
        description: operation date
      opResult:
        type: string
        example: 'N'
        description: 'operation result value is ''P'' or ''N'' '
      disDate:
        type: string
        format: date-time
        description: discharge date
      disType:
        description: 'disChargeType '
        $ref: '#/definitions/DischargeTypeDTO'
      note:
        type: string
        description: free note
      transUnit:
        type: number
        format: float
        description: transfusional unit
      visitDate:
        type: string
        format: date-time
        description: visite date
      pregTreatmentType:
        description: 'treatmentType '
        $ref: '#/definitions/PregnantTreatmentTypeDTO'
      deliveryDate:
        type: string
        format: date-time
        description: delivery date
      deliveryType:
        description: delivery type
        $ref: '#/definitions/DeliveryTypeDTO'
      deliveryResult:
        description: 'delivery type '
        $ref: '#/definitions/DeliveryResultTypeDTO'
      weight:
        type: number
        format: float
        description: weight
      userID:
        type: string
        description: weight
      lock:
        type: integer
        format: int32
        example: 0
        description: lock
      deleted:
        type: string
        example: 'N'
        description: 'flag record deleted, values are ''Y'' OR ''N'' '
  InputStream:
    type: object
  OperationDTO:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
      lock:
        type: integer
        format: int32
      major:
        type: integer
        format: int32
      type:
        $ref: '#/definitions/OperationTypeDTO'
  LotDTO:
    type: object
    properties:
      code:
        type: string
        example: LT001
        description: The lot's code
      preparationDate:
        type: string
        format: date-time
        example: '2020-06-24'
        description: The preparation date
      dueDate:
        type: string
        format: date-time
        example: '2021-06-24'
        description: The due date
      cost:
        type: number
        example: 750
        description: The lot's code
  SupplierDTO:
    type: object
    properties:
      supId:
        type: integer
        format: int32
        example: 111
        description: The supplier's ID
      supName:
        type: string
        example: Cogefar
        description: The supplier's name
      supAddress:
        type: string
        example: '25 Rue Ministre, Dschang'
        description: The supplier's address
      supTaxcode:
        type: string
        example: '5221'
        description: The supplier's tax code
      supPhone:
        type: string
        example: '+237654120145'
        description: The supplier's phone
      supFax:
        type: string
        example: '+237654120145'
        description: The supplier's fax number
      supEmail:
        type: string
        example: suplier@sample.com
        description: The supplier's e-mail address
      supNote:
        type: string
        description: The supplier's notes
  HospitalDTO:
    type: object
    properties:
      code:
        type: string
        example: STLUKE
        description: Hospital Code
      description:
        type: string
        example: St. Luke HOSPITAL - Angal
        description: Hospital Description
      address:
        type: string
        example: Hospital Address
        description: Hospital Address
      city:
        type: string
        example: Hospital City
        description: Hospital City
      telephone:
        type: string
        example: +123 0123456789
        description: Hospital Telephone
      fax:
        type: string
        example: +123 0123456789
        description: Hospital Fax
      email:
        type: string
        example: hospital@isf.email.xx
        description: Hospital Email
      currencyCod:
        type: string
        example: EUR
        description: Hospital Currency Cod
      lock:
        type: integer
        format: int32
        example: 0
        description: Hospital Version to increment
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
      statusCodeValue:
        type: integer
        format: int32
  Authentication:
    type: object
    properties:
      authenticated:
        type: boolean
      authorities:
        $ref: '#/definitions/Collection«GrantedAuthority»'
      credentials:
        type: object
      details:
        type: object
      name:
        type: string
      principal:
        type: object
  VaccineTypeDTO:
    type: object
    properties:
      code:
        type: string
        example: C
        description: Code of the vaccine type
      description:
        type: string
        example: Child
        description: Description of the vaccine type
    description: Class representing a vaccine type
  DiseaseDTO:
    type: object
    properties:
      code:
        type: integer
        format: int32
      description:
        type: string
        description: Disease description
      diseaseType:
        description: Disease type
        $ref: '#/definitions/DiseaseTypeDTO'
      ipdInInclude:
        type: boolean
        example: true
        description: indicates whether the disease is an IPD-IN disease
      ipdOutInclude:
        type: boolean
        example: true
        description: indicates whether the disease is an IPD-OUT disease
      opdInclude:
        type: boolean
        example: true
        description: indicates whether the disease is an OPD disease
    description: Class representing a disease
  VisitDTO:
    type: object
    properties:
      patient:
        description: Patient related to visitor
        $ref: '#/definitions/PatientDTO'
      date:
        description: Date of the visit
        $ref: '#/definitions/GregorianCalendar'
      note:
        type: string
        description: Note of the visit
      sms:
        type: boolean
        example: false
        description: Sms of the visit
    description: Class representing a vaccine type
  AdmissionTypeDTO:
    type: object
    properties:
      code:
        type: string
        example: A
        description: code of the admission type
      description:
        type: string
        example: AMBULANCE
        description: description of the admission type
  ExamDTO:
    type: object
    properties:
      examtype:
        $ref: '#/definitions/ExamTypeDTO'
      code:
        type: string
        example: '99.99'
        description: Exam Code
      description:
        type: string
        example: 99.99 HB
        description: Exam Description
      procedure:
        type: integer
        format: int32
        example: 1
        description: Exam Procedure
      defaultResult:
        type: string
        example: '>=12 (NORMAL)'
        description: Exam Default Result
      lock:
        type: integer
        format: int32
        example: 0
        description: Exam Db Version to increment
  TherapyDTO:
    type: object
    properties:
      therapyID:
        type: integer
        format: int32
        example: 1
        description: The therapy's ID
      patID:
        type: integer
        format: int32
        example: 1
        description: The patient's ID
      dates:
        type: array
        description: The dates of the therapy
        items:
          type: string
          format: date-time
      medical:
        description: The medical associated to the therapy
        $ref: '#/definitions/MedicalDTO'
      qty:
        type: number
        format: double
        example: 48
        description: The quantity of the medical
      units:
        type: string
        description: The units
      freqInDay:
        type: integer
        format: int32
        example: 2
        description: The frequence in day
      note:
        type: string
        example: Sample note
        description: A note for the therapy
      notify:
        type: boolean
        example: false
        description: 'the notify flag: true if the notification need to be activated, false otherwise'
      sms:
        type: boolean
        example: false
        description: 'the sms flag: true if sms need to be sent to patient, false otherwise'
