// tslint:disable
/**
 * Open Hospital API Documentation
 * Open Hospital API Documentation
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';
import {
    PatientConsensusDTO,
} from '../models';

export interface GetPatientConsensusRequest {
    patientId: number;
}

export interface UpdatePatientConsensusRequest {
    patientId: number;
    patientConsensusDTO: PatientConsensusDTO;
}

/**
 * no description
 */
export class PatientConsensusApi extends BaseAPI {

    /**
     */
    getPatientConsensus({ patientId }: GetPatientConsensusRequest): Observable<PatientConsensusDTO>
    getPatientConsensus({ patientId }: GetPatientConsensusRequest, opts?: OperationOpts): Observable<RawAjaxResponse<PatientConsensusDTO>>
    getPatientConsensus({ patientId }: GetPatientConsensusRequest, opts?: OperationOpts): Observable<PatientConsensusDTO | RawAjaxResponse<PatientConsensusDTO>> {
        throwIfNullOrUndefined(patientId, 'patientId', 'getPatientConsensus');

        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<PatientConsensusDTO>({
            url: '/patientconsensus/{patientId}'.replace('{patientId}', encodeURI(patientId)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     */
    updatePatientConsensus({ patientId, patientConsensusDTO }: UpdatePatientConsensusRequest): Observable<PatientConsensusDTO>
    updatePatientConsensus({ patientId, patientConsensusDTO }: UpdatePatientConsensusRequest, opts?: OperationOpts): Observable<RawAjaxResponse<PatientConsensusDTO>>
    updatePatientConsensus({ patientId, patientConsensusDTO }: UpdatePatientConsensusRequest, opts?: OperationOpts): Observable<PatientConsensusDTO | RawAjaxResponse<PatientConsensusDTO>> {
        throwIfNullOrUndefined(patientId, 'patientId', 'updatePatientConsensus');
        throwIfNullOrUndefined(patientConsensusDTO, 'patientConsensusDTO', 'updatePatientConsensus');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` } : undefined),
        };

        return this.request<PatientConsensusDTO>({
            url: '/patientconsensus/{patientId}'.replace('{patientId}', encodeURI(patientId)),
            method: 'PUT',
            headers,
            body: patientConsensusDTO,
        }, opts?.responseOpts);
    };

}
