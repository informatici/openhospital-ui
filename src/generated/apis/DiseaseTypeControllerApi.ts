// tslint:disable
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI } from '../runtime';
import {
    DiseaseTypeDTO,
} from '../models';

export interface DeleteDiseaseTypeUsingDELETERequest {
    code: string;
}

export interface NewDiseaseTypeUsingPOSTRequest {
    diseaseTypeDTO: DiseaseTypeDTO;
}

export interface UpdateDiseaseTypeUsingPUTRequest {
    diseaseTypeDTO: DiseaseTypeDTO;
}

/**
 * no description
 */
export class DiseaseTypeControllerApi extends BaseAPI {

    /**
     * deleteDiseaseType
     */
    deleteDiseaseTypeUsingDELETE = ({ code }: DeleteDiseaseTypeUsingDELETERequest): Observable<{ [key: string]: boolean; }> => {
        throwIfNullOrUndefined(code, 'deleteDiseaseTypeUsingDELETE');

        return this.request<{ [key: string]: boolean; }>({
            path: '/diseasetypes/{code}'.replace('{code}', encodeURI(code)),
            method: 'DELETE',
        });
    };

    /**
     * getAllDiseaseTypes
     */
    getAllDiseaseTypesUsingGET = (): Observable<Array<DiseaseTypeDTO>> => {
        return this.request<Array<DiseaseTypeDTO>>({
            path: '/diseasetypes',
            method: 'GET',
        });
    };

    /**
     * newDiseaseType
     */
    newDiseaseTypeUsingPOST = ({ diseaseTypeDTO }: NewDiseaseTypeUsingPOSTRequest): Observable<DiseaseTypeDTO> => {
        throwIfNullOrUndefined(diseaseTypeDTO, 'newDiseaseTypeUsingPOST');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<DiseaseTypeDTO>({
            path: '/diseasetypes',
            method: 'POST',
            headers,
            body: diseaseTypeDTO,
        });
    };

    /**
     * updateDiseaseType
     */
    updateDiseaseTypeUsingPUT = ({ diseaseTypeDTO }: UpdateDiseaseTypeUsingPUTRequest): Observable<DiseaseTypeDTO> => {
        throwIfNullOrUndefined(diseaseTypeDTO, 'updateDiseaseTypeUsingPUT');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<DiseaseTypeDTO>({
            path: '/diseasetypes',
            method: 'PUT',
            headers,
            body: diseaseTypeDTO,
        });
    };

}
