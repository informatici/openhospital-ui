// tslint:disable
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, HttpQuery, throwIfNullOrUndefined } from '../runtime';
import {
    SmsDTO,
} from '../models';

export interface DeleteSmsUsingPOSTRequest {
    smsDTOList: Array<SmsDTO>;
}

export interface GetAllUsingGETRequest {
    dateFrom: string;
    dateTo: string;
}

export interface SaveSmsUsingPOSTRequest {
    smsDTO: SmsDTO;
    split?: boolean;
}

/**
 * no description
 */
export class SmsControllerApi extends BaseAPI {

    /**
     * deleteSms
     */
    deleteSmsUsingPOST = ({ smsDTOList }: DeleteSmsUsingPOSTRequest): Observable<boolean> => {
        throwIfNullOrUndefined(smsDTOList, 'deleteSmsUsingPOST');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<boolean>({
            path: '/sms/delete',
            method: 'POST',
            headers,
            body: smsDTOList,
        });
    };

    /**
     * getAll
     */
    getAllUsingGET = ({ dateFrom, dateTo }: GetAllUsingGETRequest): Observable<Array<SmsDTO>> => {
        throwIfNullOrUndefined(dateFrom, 'getAllUsingGET');
        throwIfNullOrUndefined(dateTo, 'getAllUsingGET');

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'dateFrom': dateFrom,
            'dateTo': dateTo,
        };

        return this.request<Array<SmsDTO>>({
            path: '/sms',
            method: 'GET',
            query,
        });
    };

    /**
     * saveSms
     */
    saveSmsUsingPOST = ({ smsDTO, split }: SaveSmsUsingPOSTRequest): Observable<boolean> => {
        throwIfNullOrUndefined(smsDTO, 'saveSmsUsingPOST');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        const query: HttpQuery = {};

        if (split != null) { query['split'] = split; }

        return this.request<boolean>({
            path: '/sms',
            method: 'POST',
            headers,
            query,
            body: smsDTO,
        });
    };

}
