// tslint:disable
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI } from '../runtime';
import {
    DeliveryResultTypeDTO,
} from '../models';

export interface DeleteDeliveryResultTypeUsingDELETERequest {
    code: string;
}

export interface NewDeliveryResultTypeUsingPOSTRequest {
    dlvrrestTypeDTO: DeliveryResultTypeDTO;
}

export interface UpdateDeliveryResultTypetUsingPUTRequest {
    dlvrrestTypeDTO: DeliveryResultTypeDTO;
}

/**
 * no description
 */
export class DeliveryResultTypeControllerApi extends BaseAPI {

    /**
     * deleteDeliveryResultType
     */
    deleteDeliveryResultTypeUsingDELETE = ({ code }: DeleteDeliveryResultTypeUsingDELETERequest): Observable<boolean> => {
        throwIfNullOrUndefined(code, 'deleteDeliveryResultTypeUsingDELETE');

        return this.request<boolean>({
            path: '/deliveryresulttypes/{code}'.replace('{code}', encodeURI(code)),
            method: 'DELETE',
        });
    };

    /**
     * getDeliveryResultTypes
     */
    getDeliveryResultTypesUsingGET = (): Observable<Array<DeliveryResultTypeDTO>> => {
        return this.request<Array<DeliveryResultTypeDTO>>({
            path: '/deliveryresulttypes',
            method: 'GET',
        });
    };

    /**
     * newDeliveryResultType
     */
    newDeliveryResultTypeUsingPOST = ({ dlvrrestTypeDTO }: NewDeliveryResultTypeUsingPOSTRequest): Observable<string> => {
        throwIfNullOrUndefined(dlvrrestTypeDTO, 'newDeliveryResultTypeUsingPOST');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<string>({
            path: '/deliveryresulttypes',
            method: 'POST',
            headers,
            body: dlvrrestTypeDTO,
        });
    };

    /**
     * updateDeliveryResultTypet
     */
    updateDeliveryResultTypetUsingPUT = ({ dlvrrestTypeDTO }: UpdateDeliveryResultTypetUsingPUTRequest): Observable<string> => {
        throwIfNullOrUndefined(dlvrrestTypeDTO, 'updateDeliveryResultTypetUsingPUT');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<string>({
            path: '/deliveryresulttypes',
            method: 'PUT',
            headers,
            body: dlvrrestTypeDTO,
        });
    };

}
