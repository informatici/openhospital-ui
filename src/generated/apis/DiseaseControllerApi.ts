// tslint:disable
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI } from '../runtime';
import {
    DiseaseDTO,
} from '../models';

export interface DeleteDiseaseUsingDELETERequest {
    code: number;
}

export interface GetDiseaseByCodeUsingGETRequest {
    code: number;
}

export interface GetDiseasesIpdInByCodeUsingGETRequest {
    typecode: string;
}

export interface GetDiseasesIpdOutByCodeUsingGETRequest {
    typecode: string;
}

export interface GetDiseasesOpdByCodeUsingGETRequest {
    typecode: string;
}

export interface GetDiseasesUsingGETRequest {
    typecode: string;
}

export interface NewDiseaseUsingPOSTRequest {
    diseaseDTO: DiseaseDTO;
}

export interface UpdateDiseaseUsingPUTRequest {
    diseaseDTO: DiseaseDTO;
}

/**
 * no description
 */
export class DiseaseControllerApi extends BaseAPI {

    /**
     * deleteDisease
     */
    deleteDiseaseUsingDELETE = ({ code }: DeleteDiseaseUsingDELETERequest): Observable<{ [key: string]: boolean; }> => {
        throwIfNullOrUndefined(code, 'deleteDiseaseUsingDELETE');

        return this.request<{ [key: string]: boolean; }>({
            path: '/diseases/{code}'.replace('{code}', encodeURI(code)),
            method: 'DELETE',
        });
    };

    /**
     * getAllDiseases
     */
    getAllDiseasesUsingGET = (): Observable<Array<DiseaseDTO>> => {
        return this.request<Array<DiseaseDTO>>({
            path: '/diseases/all',
            method: 'GET',
        });
    };

    /**
     * getDiseaseByCode
     */
    getDiseaseByCodeUsingGET = ({ code }: GetDiseaseByCodeUsingGETRequest): Observable<DiseaseDTO> => {
        throwIfNullOrUndefined(code, 'getDiseaseByCodeUsingGET');

        return this.request<DiseaseDTO>({
            path: '/diseases/{code}'.replace('{code}', encodeURI(code)),
            method: 'GET',
        });
    };

    /**
     * getDiseasesIpdInByCode
     */
    getDiseasesIpdInByCodeUsingGET = ({ typecode }: GetDiseasesIpdInByCodeUsingGETRequest): Observable<Array<DiseaseDTO>> => {
        throwIfNullOrUndefined(typecode, 'getDiseasesIpdInByCodeUsingGET');

        return this.request<Array<DiseaseDTO>>({
            path: '/diseases/ipd/in/{typecode}'.replace('{typecode}', encodeURI(typecode)),
            method: 'GET',
        });
    };

    /**
     * getDiseasesIpdIn
     */
    getDiseasesIpdInUsingGET = (): Observable<Array<DiseaseDTO>> => {
        return this.request<Array<DiseaseDTO>>({
            path: '/diseases/ipd/in',
            method: 'GET',
        });
    };

    /**
     * getDiseasesIpdOutByCode
     */
    getDiseasesIpdOutByCodeUsingGET = ({ typecode }: GetDiseasesIpdOutByCodeUsingGETRequest): Observable<Array<DiseaseDTO>> => {
        throwIfNullOrUndefined(typecode, 'getDiseasesIpdOutByCodeUsingGET');

        return this.request<Array<DiseaseDTO>>({
            path: '/diseases/ipd/out/{typecode}'.replace('{typecode}', encodeURI(typecode)),
            method: 'GET',
        });
    };

    /**
     * getDiseasesIpdOut
     */
    getDiseasesIpdOutUsingGET = (): Observable<Array<DiseaseDTO>> => {
        return this.request<Array<DiseaseDTO>>({
            path: '/diseases/ipd/out',
            method: 'GET',
        });
    };

    /**
     * getDiseasesOpdByCode
     */
    getDiseasesOpdByCodeUsingGET = ({ typecode }: GetDiseasesOpdByCodeUsingGETRequest): Observable<Array<DiseaseDTO>> => {
        throwIfNullOrUndefined(typecode, 'getDiseasesOpdByCodeUsingGET');

        return this.request<Array<DiseaseDTO>>({
            path: '/diseases/opd/{typecode}'.replace('{typecode}', encodeURI(typecode)),
            method: 'GET',
        });
    };

    /**
     * getDiseasesOpd
     */
    getDiseasesOpdUsingGET = (): Observable<Array<DiseaseDTO>> => {
        return this.request<Array<DiseaseDTO>>({
            path: '/diseases/opd',
            method: 'GET',
        });
    };

    /**
     * getDiseases
     */
    getDiseasesUsingGET = ({ typecode }: GetDiseasesUsingGETRequest): Observable<Array<DiseaseDTO>> => {
        throwIfNullOrUndefined(typecode, 'getDiseasesUsingGET');

        return this.request<Array<DiseaseDTO>>({
            path: '/diseases/both/{typecode}'.replace('{typecode}', encodeURI(typecode)),
            method: 'GET',
        });
    };

    /**
     * getDiseases
     */
    getDiseasesUsingGET1 = (): Observable<Array<DiseaseDTO>> => {
        return this.request<Array<DiseaseDTO>>({
            path: '/diseases/both',
            method: 'GET',
        });
    };

    /**
     * newDisease
     */
    newDiseaseUsingPOST = ({ diseaseDTO }: NewDiseaseUsingPOSTRequest): Observable<DiseaseDTO> => {
        throwIfNullOrUndefined(diseaseDTO, 'newDiseaseUsingPOST');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<DiseaseDTO>({
            path: '/diseases',
            method: 'POST',
            headers,
            body: diseaseDTO,
        });
    };

    /**
     * updateDisease
     */
    updateDiseaseUsingPUT = ({ diseaseDTO }: UpdateDiseaseUsingPUTRequest): Observable<DiseaseDTO> => {
        throwIfNullOrUndefined(diseaseDTO, 'updateDiseaseUsingPUT');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<DiseaseDTO>({
            path: '/diseases',
            method: 'PUT',
            headers,
            body: diseaseDTO,
        });
    };

}
